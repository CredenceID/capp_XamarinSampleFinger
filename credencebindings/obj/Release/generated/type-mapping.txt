com/credenceid/biometrics/ApduCommand = Com.Credenceid.Biometrics.ApduCommand
  <init>([B)V = .ctor(byte[])
  <init>(BBBB[B)V = .ctor(sbyte, sbyte, sbyte, sbyte, byte[])
  <init>(Ljava/lang/String;)V = .ctor(string)
  cla = Cla
  command = Command
  CREATOR = Creator
  ins = Ins
  p1 = P1
  p2 = P2
  response = Response
  sw1 = Sw1
  sw2 = Sw2
  isSuccess()Z = IsSuccess
  describeContents()I = DescribeContents()
  getCommandBytes()[B = GetCommandBytes()
  setResponse([B)V = SetResponse(byte[])
  writeToParcel(Landroid/os/Parcel;I)V = WriteToParcel(Android.OS.Parcel, Android.OS.ParcelableWriteFlags)
com/credenceid/biometrics/Biometrics = Com.Credenceid.Biometrics.IBiometrics
  getDeviceFamily()Lcom/credenceid/biometrics/DeviceFamily; = DeviceFamily
  getDeviceID()Ljava/lang/String; = DeviceID
  getDeviceType()Lcom/credenceid/biometrics/DeviceType; = DeviceType
  getFingerprintScannerType()Lcom/credenceid/biometrics/Biometrics$FingerprintScannerType; = FingerprintScannerType
  hasCardReader()Z = HasCardReader
  hasFingerprintScanner()Z = HasFingerprintScanner
  hasFMDMatcher()Z = HasFMDMatcher
  hasIrisScanner()Z = HasIrisScanner
  hasMRZReader()Z = HasMRZReader
  hasNFCCardReader()Z = HasNFCCardReader
  hasUSBCamera()Z = HasUSBCamera
  hasUSBFileAccessEnabling()Z = HasUSBFileAccessEnabling
  getProductName()Ljava/lang/String; = ProductName
  getSDKJarVersion()Ljava/lang/String; = SDKJarVersion
  getServiceVersion()Ljava/lang/String; = ServiceVersion
  cameraTorchEnable(Z)Z = CameraTorchEnable(bool)
  cancelCapture()V = CancelCapture()
  captureIrises(Lcom/credenceid/biometrics/Biometrics$EyeSelection;Lcom/credenceid/biometrics/Biometrics$OnIrisesCapturedListener;)V = CaptureIrises(Com.Credenceid.Biometrics.BiometricsEyeSelection, Com.Credenceid.Biometrics.IBiometricsOnIrisesCapturedListener)
  cardCloseCommand()V = CardCloseCommand()
  cardCommand(Lcom/credenceid/biometrics/ApduCommand;ZLcom/credenceid/biometrics/Biometrics$OnCardCommandListener;)V = CardCommand(Com.Credenceid.Biometrics.ApduCommand, bool, Com.Credenceid.Biometrics.IBiometricsOnCardCommandListener)
  cardCommand(Lcom/credenceid/biometrics/ApduCommand;ZLcom/credenceid/biometrics/Biometrics$OnCardCommandSyncResultListener;)V = CardCommand(Com.Credenceid.Biometrics.ApduCommand, bool, Com.Credenceid.Biometrics.IBiometricsOnCardCommandSyncResultListener)
  cardConnectSync(I)Z = CardConnectSync(int)
  cardDisconnectSync(I)Z = CardDisconnectSync(int)
  cardOpenCommand(Lcom/credenceid/biometrics/Biometrics$CardReaderStatusListener;)V = CardOpenCommand(Com.Credenceid.Biometrics.IBiometricsCardReaderStatusListener)
  closeFingerprintReader()V = CloseFingerprintReader()
  closeIrisScanner()V = CloseIrisScanner()
  closeMRZ()V = CloseMRZ()
  compareFMD([B[BLcom/credenceid/biometrics/Biometrics$FMDFormat;Lcom/credenceid/biometrics/Biometrics$OnCompareFMDListener;)V = CompareFMD(byte[], byte[], Com.Credenceid.Biometrics.BiometricsFMDFormat, Com.Credenceid.Biometrics.IBiometricsOnCompareFMDListener)
  compareFMDSync([B[BLcom/credenceid/biometrics/Biometrics$FMDFormat;I)Lcom/credenceid/biometrics/CompareFMDSyncResponse; = CompareFMDSync(byte[], byte[], Com.Credenceid.Biometrics.BiometricsFMDFormat, int)
  compressToWSQ(Ljava/lang/String;FLcom/credenceid/biometrics/Biometrics$OnCompressToWSQListener;)V = CompressToWSQ(string, float, Com.Credenceid.Biometrics.IBiometricsOnCompressToWSQListener)
  convertCCFToFMD([BLcom/credenceid/biometrics/Biometrics$OnCCFToFMDConversionListener;)V = ConvertCCFToFMD(byte[], Com.Credenceid.Biometrics.IBiometricsOnCCFToFMDConversionListener)
  convertCCFToFMD([BSSSSLcom/credenceid/biometrics/Biometrics$OnCCFToFMDConversionListener;)V = ConvertCCFToFMD(byte[], short, short, short, short, Com.Credenceid.Biometrics.IBiometricsOnCCFToFMDConversionListener)
  convertCCFToFMDSync([BSSSSI)Lcom/credenceid/biometrics/CCFToFMDSyncResponse; = ConvertCCFToFMDSync(byte[], short, short, short, short, int)
  convertFMDToCCF([BLcom/credenceid/biometrics/Biometrics$OnFMDToCCFConversionListener;)V = ConvertFMDToCCF(byte[], Com.Credenceid.Biometrics.IBiometricsOnFMDToCCFConversionListener)
  convertFMDToCCFSync([BI)Lcom/credenceid/biometrics/FMDToCCFSyncResponse; = ConvertFMDToCCFSync(byte[], int)
  convertToFMD(Landroid/graphics/Bitmap;Lcom/credenceid/biometrics/Biometrics$FMDFormat;Lcom/credenceid/biometrics/Biometrics$OnConvertToFMDListener;)V = ConvertToFMD(Android.Graphics.Bitmap, Com.Credenceid.Biometrics.BiometricsFMDFormat, Com.Credenceid.Biometrics.IBiometricsOnConvertToFMDListener)
  convertToFMD([BLcom/credenceid/biometrics/Biometrics$FMDFormat;Lcom/credenceid/biometrics/Biometrics$OnConvertToFMDListener;)V = ConvertToFMD(byte[], Com.Credenceid.Biometrics.BiometricsFMDFormat, Com.Credenceid.Biometrics.IBiometricsOnConvertToFMDListener)
  convertToFMDSync(Landroid/graphics/Bitmap;Lcom/credenceid/biometrics/Biometrics$FMDFormat;I)Lcom/credenceid/biometrics/ConvertToFMDSyncResponse; = ConvertToFMDSync(Android.Graphics.Bitmap, Com.Credenceid.Biometrics.BiometricsFMDFormat, int)
  convertToFMDSync([BLcom/credenceid/biometrics/Biometrics$FMDFormat;I)Lcom/credenceid/biometrics/ConvertToFMDSyncResponse; = ConvertToFMDSync(byte[], Com.Credenceid.Biometrics.BiometricsFMDFormat, int)
  decompressWSQ([BLcom/credenceid/biometrics/Biometrics$OnDecompressWSQListener;)V = DecompressWSQ(byte[], Com.Credenceid.Biometrics.IBiometricsOnDecompressWSQListener)
  decompressWSQ(Ljava/lang/String;Lcom/credenceid/biometrics/Biometrics$OnDecompressWSQListener;)V = DecompressWSQ(string, Com.Credenceid.Biometrics.IBiometricsOnDecompressWSQListener)
  ektpCardReadCommand(I[BLcom/credenceid/biometrics/Biometrics$OnEktpCardReadListener;)V = EktpCardReadCommand(int, byte[], Com.Credenceid.Biometrics.IBiometricsOnEktpCardReadListener)
  ePassportCloseCommand()V = EPassportCloseCommand()
  ePassportCommand(Lcom/credenceid/biometrics/ApduCommand;ZLcom/credenceid/biometrics/Biometrics$OnEPassportCommandListener;)V = EPassportCommand(Com.Credenceid.Biometrics.ApduCommand, bool, Com.Credenceid.Biometrics.IBiometricsOnEPassportCommandListener)
  ePassportOpenCommand(Lcom/credenceid/biometrics/Biometrics$EPassportReaderStatusListener;)V = EPassportOpenCommand(Com.Credenceid.Biometrics.IBiometricsEPassportReaderStatusListener)
  finalizeBiometrics(Z)V = FinalizeBiometrics(bool)
  generateTerminalIsCertificate(Lcom/credenceid/biometrics/Biometrics$generateTerminalIsCertificateListener;)V = GenerateTerminalIsCertificate(Com.Credenceid.Biometrics.IBiometricsGenerateTerminalIsCertificateListener)
  getFingerQuality(Landroid/graphics/Bitmap;Lcom/credenceid/biometrics/Biometrics$OnGetFingerQualityListener;)V = GetFingerQuality(Android.Graphics.Bitmap, Com.Credenceid.Biometrics.IBiometricsOnGetFingerQualityListener)
  getFingerQuality(Ljava/lang/String;Lcom/credenceid/biometrics/Biometrics$OnFingerQualityListener;)V = GetFingerQuality(string, Com.Credenceid.Biometrics.IBiometricsOnFingerQualityListener)
  getPreferences(Ljava/lang/String;Lcom/credenceid/biometrics/Biometrics$PreferencesListener;)V = GetPreferences(string, Com.Credenceid.Biometrics.IBiometricsPreferencesListener)
  getProviderDetails(Lcom/credenceid/biometrics/Biometrics$OnGetProviderDetailsListener;)V = GetProviderDetails(Com.Credenceid.Biometrics.IBiometricsOnGetProviderDetailsListener)
  grabFingerprint(Lcom/credenceid/biometrics/Biometrics$ScanType;ZLcom/credenceid/biometrics/Biometrics$OnFingerprintGrabbedFullListener;)V = GrabFingerprint(Com.Credenceid.Biometrics.BiometricsScanType, bool, Com.Credenceid.Biometrics.IBiometricsOnFingerprintGrabbedFullListener)
  grabFingerprint(Lcom/credenceid/biometrics/Biometrics$ScanType;ZLcom/credenceid/biometrics/Biometrics$OnFingerprintGrabbedListener;)V = GrabFingerprint(Com.Credenceid.Biometrics.BiometricsScanType, bool, Com.Credenceid.Biometrics.IBiometricsOnFingerprintGrabbedListener)
  grabFingerprint(Lcom/credenceid/biometrics/Biometrics$ScanType;ZLcom/credenceid/biometrics/Biometrics$OnFingerprintGrabbedRawListener;)V = GrabFingerprint(Com.Credenceid.Biometrics.BiometricsScanType, bool, Com.Credenceid.Biometrics.IBiometricsOnFingerprintGrabbedRawListener)
  grabFingerprint(Lcom/credenceid/biometrics/Biometrics$ScanType;ZLcom/credenceid/biometrics/Biometrics$OnFingerprintGrabbedWSQListener;)V = GrabFingerprint(Com.Credenceid.Biometrics.BiometricsScanType, bool, Com.Credenceid.Biometrics.IBiometricsOnFingerprintGrabbedWSQListener)
  grabFingerprint(Lcom/credenceid/biometrics/Biometrics$ScanType;ZLcom/credenceid/biometrics/Biometrics$OnMultiFingerprintGrabbedListener;)V = GrabFingerprint(Com.Credenceid.Biometrics.BiometricsScanType, bool, Com.Credenceid.Biometrics.IBiometricsOnMultiFingerprintGrabbedListener)
  grabFingerprint(Lcom/credenceid/biometrics/Biometrics$ScanType;Lcom/credenceid/biometrics/Biometrics$OnFingerprintGrabbedFullListener;)V = GrabFingerprint(Com.Credenceid.Biometrics.BiometricsScanType, Com.Credenceid.Biometrics.IBiometricsOnFingerprintGrabbedFullListener)
  grabFingerprint(Lcom/credenceid/biometrics/Biometrics$ScanType;Lcom/credenceid/biometrics/Biometrics$OnFingerprintGrabbedListener;)V = GrabFingerprint(Com.Credenceid.Biometrics.BiometricsScanType, Com.Credenceid.Biometrics.IBiometricsOnFingerprintGrabbedListener)
  grabFingerprint(Lcom/credenceid/biometrics/Biometrics$ScanType;Lcom/credenceid/biometrics/Biometrics$OnFingerprintGrabbedWSQListener;)V = GrabFingerprint(Com.Credenceid.Biometrics.BiometricsScanType, Com.Credenceid.Biometrics.IBiometricsOnFingerprintGrabbedWSQListener)
  grabFingerprintSync(I)Lcom/credenceid/biometrics/FingerprintSyncResponse; = GrabFingerprintSync(int)
  initializeBiometrics(Lcom/credenceid/biometrics/Biometrics$OnInitializedListener;)V = InitializeBiometrics(Com.Credenceid.Biometrics.IBiometricsOnInitializedListener)
  openFingerprintReader(Lcom/credenceid/biometrics/Biometrics$FingerprintReaderStatusListener;)V = OpenFingerprintReader(Com.Credenceid.Biometrics.IBiometricsFingerprintReaderStatusListener)
  openMRZ(Lcom/credenceid/biometrics/Biometrics$MRZStatusListener;)V = OpenMRZ(Com.Credenceid.Biometrics.IBiometricsMRZStatusListener)
  readICAODocument(Ljava/lang/String;Ljava/lang/String;ZLcom/credenceid/biometrics/Biometrics$ICAODocumentReadListener;)V = ReadICAODocument(string, string, bool, Com.Credenceid.Biometrics.IBiometricsCAODocumentReadListener)
  readICAODocument(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Lcom/credenceid/biometrics/Biometrics$ICAODocumentReadListener;)V = ReadICAODocument(string, string, string, Com.Credenceid.Biometrics.IBiometricsCAODocumentReadListener)
  readICAODocument(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;ZLcom/credenceid/biometrics/Biometrics$ICAODocumentReadListener;)V = ReadICAODocument(string, string, string, string, bool, Com.Credenceid.Biometrics.IBiometricsCAODocumentReadListener)
  readMRZ(Lcom/credenceid/biometrics/Biometrics$OnMRZReaderListener;)V = ReadMRZ(Com.Credenceid.Biometrics.IBiometricsOnMRZReaderListener)
  readSmartCard(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Lcom/credenceid/biometrics/Biometrics$GIcaoReadListener;)V = ReadSmartCard(string, string, string, Com.Credenceid.Biometrics.IBiometricsGIcaoReadListener)
  readSmartCard(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Lcom/credenceid/biometrics/Biometrics$GNIDReadListener;)V = ReadSmartCard(string, string, string, Com.Credenceid.Biometrics.IBiometricsGNIDReadListener)
  registerCardStatusListener(Lcom/credenceid/biometrics/Biometrics$OnCardStatusListener;)V = RegisterCardStatusListener(Com.Credenceid.Biometrics.IBiometricsOnCardStatusListener)
  registerEPassportStatusListener(Lcom/credenceid/biometrics/Biometrics$OnEPassportStatusListener;)V = RegisterEPassportStatusListener(Com.Credenceid.Biometrics.IBiometricsOnEPassportStatusListener)
  registerMRZDocumentStatusListener(Lcom/credenceid/biometrics/Biometrics$OnMRZDocumentStatusListener;)V = RegisterMRZDocumentStatusListener(Com.Credenceid.Biometrics.IBiometricsOnMRZDocumentStatusListener)
  registerOnMRZReaderListener(Lcom/credenceid/biometrics/Biometrics$OnMRZReaderListener;)V = RegisterOnMRZReaderListener(Com.Credenceid.Biometrics.IBiometricsOnMRZReaderListener)
  setPreferences(Ljava/lang/String;Ljava/lang/String;Lcom/credenceid/biometrics/Biometrics$PreferencesListener;)V = SetPreferences(string, string, Com.Credenceid.Biometrics.IBiometricsPreferencesListener)
  switchMobileData(ZLcom/credenceid/biometrics/Biometrics$OnMobileDataChangedListener;)V = SwitchMobileData(bool, Com.Credenceid.Biometrics.IBiometricsOnMobileDataChangedListener)
com/credenceid/biometrics/BiometricsActivity = Com.Credenceid.Biometrics.BiometricsActivity
  <init>()V = .ctor()
  getDeviceFamily()Lcom/credenceid/biometrics/DeviceFamily; = DeviceFamily
  getDeviceID()Ljava/lang/String; = DeviceID
  getDeviceType()Lcom/credenceid/biometrics/DeviceType; = DeviceType
  getFingerprintScannerType()Lcom/credenceid/biometrics/Biometrics$FingerprintScannerType; = FingerprintScannerType
  hasCardReader()Z = HasCardReader
  hasFingerprintScanner()Z = HasFingerprintScanner
  hasFMDMatcher()Z = HasFMDMatcher
  hasIrisScanner()Z = HasIrisScanner
  hasMRZReader()Z = HasMRZReader
  hasNFCCardReader()Z = HasNFCCardReader
  hasUSBCamera()Z = HasUSBCamera
  hasUSBFileAccessEnabling()Z = HasUSBFileAccessEnabling
  getProductName()Ljava/lang/String; = ProductName
  getSDKJarVersion()Ljava/lang/String; = SDKJarVersion
  getServiceVersion()Ljava/lang/String; = ServiceVersion
  analyzeFace(Landroid/graphics/Bitmap;Lcom/credenceid/face/FaceEngine$OnAnalyzeFaceImageListener;)V = AnalyzeFace(Android.Graphics.Bitmap, Com.Credenceid.Face.IFaceEngineOnAnalyzeFaceImageListener)
  analyzeFace([BIILcom/credenceid/face/FaceEngine$OnAnalyzeFaceImageListener;)V = AnalyzeFace(byte[], int, int, Com.Credenceid.Face.IFaceEngineOnAnalyzeFaceImageListener)
  analyzeFaceSync(Landroid/graphics/Bitmap;I)Lcom/credenceid/face/AnalyzeFaceSyncResponse; = AnalyzeFaceSync(Android.Graphics.Bitmap, int)
  analyzeFaceSync([BIII)Lcom/credenceid/face/AnalyzeFaceSyncResponse; = AnalyzeFaceSync(byte[], int, int, int)
  biometricsInitialized()Z = BiometricsInitialized()
  cameraTorchEnable(Z)Z = CameraTorchEnable(bool)
  cancelCapture()V = CancelCapture()
  captureIrises()V = CaptureIrises()
  captureIrises(Lcom/credenceid/biometrics/Biometrics$EyeSelection;)V = CaptureIrises(Com.Credenceid.Biometrics.BiometricsEyeSelection)
  captureIrises(Lcom/credenceid/biometrics/Biometrics$EyeSelection;Lcom/credenceid/biometrics/Biometrics$OnIrisesCapturedListener;)V = CaptureIrises(Com.Credenceid.Biometrics.BiometricsEyeSelection, Com.Credenceid.Biometrics.IBiometricsOnIrisesCapturedListener)
  cardCloseCommand()V = CardCloseCommand()
  cardCommand(Lcom/credenceid/biometrics/ApduCommand;ZLcom/credenceid/biometrics/Biometrics$OnCardCommandListener;)V = CardCommand(Com.Credenceid.Biometrics.ApduCommand, bool, Com.Credenceid.Biometrics.IBiometricsOnCardCommandListener)
  cardCommand(Lcom/credenceid/biometrics/ApduCommand;ZLcom/credenceid/biometrics/Biometrics$OnCardCommandSyncResultListener;)V = CardCommand(Com.Credenceid.Biometrics.ApduCommand, bool, Com.Credenceid.Biometrics.IBiometricsOnCardCommandSyncResultListener)
  cardConnectSync(I)Z = CardConnectSync(int)
  cardDisconnectSync(I)Z = CardDisconnectSync(int)
  cardOpenCommand(Lcom/credenceid/biometrics/Biometrics$CardReaderStatusListener;)V = CardOpenCommand(Com.Credenceid.Biometrics.IBiometricsCardReaderStatusListener)
  cardSyncCommand(Lcom/credenceid/biometrics/ApduCommand;Z)Lcom/credenceid/biometrics/CardCommandResponse; = CardSyncCommand(Com.Credenceid.Biometrics.ApduCommand, bool)
  closeFingerprintReader()V = CloseFingerprintReader()
  closeIrisScanner()V = CloseIrisScanner()
  closeMRZ()V = CloseMRZ()
  compareFace([B[BLcom/credenceid/face/FaceEngine$OnMatchFaceTemplatesListener;)V = CompareFace(byte[], byte[], Com.Credenceid.Face.IFaceEngineOnMatchFaceTemplatesListener)
  compareFaceSync([B[BI)Lcom/credenceid/face/CompareFaceSyncResponse; = CompareFaceSync(byte[], byte[], int)
  compareFMD([B[BLcom/credenceid/biometrics/Biometrics$FMDFormat;Lcom/credenceid/biometrics/Biometrics$OnCompareFMDListener;)V = CompareFMD(byte[], byte[], Com.Credenceid.Biometrics.BiometricsFMDFormat, Com.Credenceid.Biometrics.IBiometricsOnCompareFMDListener)
  compareFMDSync([B[BLcom/credenceid/biometrics/Biometrics$FMDFormat;I)Lcom/credenceid/biometrics/CompareFMDSyncResponse; = CompareFMDSync(byte[], byte[], Com.Credenceid.Biometrics.BiometricsFMDFormat, int)
  compressToWSQ(Ljava/lang/String;FLcom/credenceid/biometrics/Biometrics$OnCompressToWSQListener;)V = CompressToWSQ(string, float, Com.Credenceid.Biometrics.IBiometricsOnCompressToWSQListener)
  convertCCFToFMD([BLcom/credenceid/biometrics/Biometrics$OnCCFToFMDConversionListener;)V = ConvertCCFToFMD(byte[], Com.Credenceid.Biometrics.IBiometricsOnCCFToFMDConversionListener)
  convertCCFToFMD([BSSSSLcom/credenceid/biometrics/Biometrics$OnCCFToFMDConversionListener;)V = ConvertCCFToFMD(byte[], short, short, short, short, Com.Credenceid.Biometrics.IBiometricsOnCCFToFMDConversionListener)
  convertCCFToFMDSync([BSSSSI)Lcom/credenceid/biometrics/CCFToFMDSyncResponse; = ConvertCCFToFMDSync(byte[], short, short, short, short, int)
  convertFMDToCCF([BLcom/credenceid/biometrics/Biometrics$OnFMDToCCFConversionListener;)V = ConvertFMDToCCF(byte[], Com.Credenceid.Biometrics.IBiometricsOnFMDToCCFConversionListener)
  convertFMDToCCFSync([BI)Lcom/credenceid/biometrics/FMDToCCFSyncResponse; = ConvertFMDToCCFSync(byte[], int)
  convertToFMD(Landroid/graphics/Bitmap;Lcom/credenceid/biometrics/Biometrics$FMDFormat;Lcom/credenceid/biometrics/Biometrics$OnConvertToFMDListener;)V = ConvertToFMD(Android.Graphics.Bitmap, Com.Credenceid.Biometrics.BiometricsFMDFormat, Com.Credenceid.Biometrics.IBiometricsOnConvertToFMDListener)
  convertToFMD([BLcom/credenceid/biometrics/Biometrics$FMDFormat;Lcom/credenceid/biometrics/Biometrics$OnConvertToFMDListener;)V = ConvertToFMD(byte[], Com.Credenceid.Biometrics.BiometricsFMDFormat, Com.Credenceid.Biometrics.IBiometricsOnConvertToFMDListener)
  convertToFMDSync(Landroid/graphics/Bitmap;Lcom/credenceid/biometrics/Biometrics$FMDFormat;I)Lcom/credenceid/biometrics/ConvertToFMDSyncResponse; = ConvertToFMDSync(Android.Graphics.Bitmap, Com.Credenceid.Biometrics.BiometricsFMDFormat, int)
  convertToFMDSync([BLcom/credenceid/biometrics/Biometrics$FMDFormat;I)Lcom/credenceid/biometrics/ConvertToFMDSyncResponse; = ConvertToFMDSync(byte[], Com.Credenceid.Biometrics.BiometricsFMDFormat, int)
  createFaceTemplate(Landroid/graphics/Bitmap;Lcom/credenceid/face/FaceEngine$OnCreateFaceTemplateListener;)V = CreateFaceTemplate(Android.Graphics.Bitmap, Com.Credenceid.Face.IFaceEngineOnCreateFaceTemplateListener)
  createFaceTemplate([BIILcom/credenceid/face/FaceEngine$OnCreateFaceTemplateListener;)V = CreateFaceTemplate(byte[], int, int, Com.Credenceid.Face.IFaceEngineOnCreateFaceTemplateListener)
  createFaceTemplateSync(Landroid/graphics/Bitmap;I)Lcom/credenceid/face/CreateFaceTemplateSyncResponse; = CreateFaceTemplateSync(Android.Graphics.Bitmap, int)
  createFaceTemplateSync([BIII)Lcom/credenceid/face/CreateFaceTemplateSyncResponse; = CreateFaceTemplateSync(byte[], int, int, int)
  decompressWSQ([BLcom/credenceid/biometrics/Biometrics$OnDecompressWSQListener;)V = DecompressWSQ(byte[], Com.Credenceid.Biometrics.IBiometricsOnDecompressWSQListener)
  decompressWSQ(Ljava/lang/String;Lcom/credenceid/biometrics/Biometrics$OnDecompressWSQListener;)V = DecompressWSQ(string, Com.Credenceid.Biometrics.IBiometricsOnDecompressWSQListener)
  detectFace(Landroid/graphics/Bitmap;Lcom/credenceid/face/FaceEngine$OnDetectFaceListener;)V = DetectFace(Android.Graphics.Bitmap, Com.Credenceid.Face.IFaceEngineOnDetectFaceListener)
  detectFace([BIILcom/credenceid/face/FaceEngine$OnDetectFaceListener;)V = DetectFace(byte[], int, int, Com.Credenceid.Face.IFaceEngineOnDetectFaceListener)
  detectFaceSync(Landroid/graphics/Bitmap;I)Lcom/credenceid/face/DetectFaceSyncResponse; = DetectFaceSync(Android.Graphics.Bitmap, int)
  detectFaceSync([BIII)Lcom/credenceid/face/DetectFaceSyncResponse; = DetectFaceSync(byte[], int, int, int)
  ektpCardReadCommand(I[BLcom/credenceid/biometrics/Biometrics$OnEktpCardReadListener;)V = EktpCardReadCommand(int, byte[], Com.Credenceid.Biometrics.IBiometricsOnEktpCardReadListener)
  EKTPCardReadCommand(I[B)V = EKTPCardReadCommand(int, byte[])
  ePassportCloseCommand()V = EPassportCloseCommand()
  ePassportCommand(Lcom/credenceid/biometrics/ApduCommand;ZLcom/credenceid/biometrics/Biometrics$OnEPassportCommandListener;)V = EPassportCommand(Com.Credenceid.Biometrics.ApduCommand, bool, Com.Credenceid.Biometrics.IBiometricsOnEPassportCommandListener)
  ePassportOpenCommand(Lcom/credenceid/biometrics/Biometrics$EPassportReaderStatusListener;)V = EPassportOpenCommand(Com.Credenceid.Biometrics.IBiometricsEPassportReaderStatusListener)
  finalizeBiometrics(Z)V = FinalizeBiometrics(bool)
  generateTerminalIsCertificate(Lcom/credenceid/biometrics/Biometrics$generateTerminalIsCertificateListener;)V = GenerateTerminalIsCertificate(Com.Credenceid.Biometrics.IBiometricsGenerateTerminalIsCertificateListener)
  getFingerQuality(Landroid/graphics/Bitmap;Lcom/credenceid/biometrics/Biometrics$OnGetFingerQualityListener;)V = GetFingerQuality(Android.Graphics.Bitmap, Com.Credenceid.Biometrics.IBiometricsOnGetFingerQualityListener)
  getFingerQuality(Ljava/lang/String;Lcom/credenceid/biometrics/Biometrics$OnFingerQualityListener;)V = GetFingerQuality(string, Com.Credenceid.Biometrics.IBiometricsOnFingerQualityListener)
  getPreferences(Ljava/lang/String;Lcom/credenceid/biometrics/Biometrics$PreferencesListener;)V = GetPreferences(string, Com.Credenceid.Biometrics.IBiometricsPreferencesListener)
  getProviderDetails(Lcom/credenceid/biometrics/Biometrics$OnGetProviderDetailsListener;)V = GetProviderDetails(Com.Credenceid.Biometrics.IBiometricsOnGetProviderDetailsListener)
  grabFingerprint()V = GrabFingerprint()
  grabFingerprint(Lcom/credenceid/biometrics/Biometrics$ScanType;)V = GrabFingerprint(Com.Credenceid.Biometrics.BiometricsScanType)
  grabFingerprint(Lcom/credenceid/biometrics/Biometrics$ScanType;ZLcom/credenceid/biometrics/Biometrics$OnFingerprintGrabbedFullListener;)V = GrabFingerprint(Com.Credenceid.Biometrics.BiometricsScanType, bool, Com.Credenceid.Biometrics.IBiometricsOnFingerprintGrabbedFullListener)
  grabFingerprint(Lcom/credenceid/biometrics/Biometrics$ScanType;ZLcom/credenceid/biometrics/Biometrics$OnFingerprintGrabbedListener;)V = GrabFingerprint(Com.Credenceid.Biometrics.BiometricsScanType, bool, Com.Credenceid.Biometrics.IBiometricsOnFingerprintGrabbedListener)
  grabFingerprint(Lcom/credenceid/biometrics/Biometrics$ScanType;ZLcom/credenceid/biometrics/Biometrics$OnFingerprintGrabbedRawListener;)V = GrabFingerprint(Com.Credenceid.Biometrics.BiometricsScanType, bool, Com.Credenceid.Biometrics.IBiometricsOnFingerprintGrabbedRawListener)
  grabFingerprint(Lcom/credenceid/biometrics/Biometrics$ScanType;ZLcom/credenceid/biometrics/Biometrics$OnFingerprintGrabbedWSQListener;)V = GrabFingerprint(Com.Credenceid.Biometrics.BiometricsScanType, bool, Com.Credenceid.Biometrics.IBiometricsOnFingerprintGrabbedWSQListener)
  grabFingerprint(Lcom/credenceid/biometrics/Biometrics$ScanType;ZLcom/credenceid/biometrics/Biometrics$OnMultiFingerprintGrabbedListener;)V = GrabFingerprint(Com.Credenceid.Biometrics.BiometricsScanType, bool, Com.Credenceid.Biometrics.IBiometricsOnMultiFingerprintGrabbedListener)
  grabFingerprint(Lcom/credenceid/biometrics/Biometrics$ScanType;Lcom/credenceid/biometrics/Biometrics$OnFingerprintGrabbedFullListener;)V = GrabFingerprint(Com.Credenceid.Biometrics.BiometricsScanType, Com.Credenceid.Biometrics.IBiometricsOnFingerprintGrabbedFullListener)
  grabFingerprint(Lcom/credenceid/biometrics/Biometrics$ScanType;Lcom/credenceid/biometrics/Biometrics$OnFingerprintGrabbedListener;)V = GrabFingerprint(Com.Credenceid.Biometrics.BiometricsScanType, Com.Credenceid.Biometrics.IBiometricsOnFingerprintGrabbedListener)
  grabFingerprint(Lcom/credenceid/biometrics/Biometrics$ScanType;Lcom/credenceid/biometrics/Biometrics$OnFingerprintGrabbedWSQListener;)V = GrabFingerprint(Com.Credenceid.Biometrics.BiometricsScanType, Com.Credenceid.Biometrics.IBiometricsOnFingerprintGrabbedWSQListener)
  grabFingerprintSync(I)Lcom/credenceid/biometrics/FingerprintSyncResponse; = GrabFingerprintSync(int)
  initializeBiometrics(Lcom/credenceid/biometrics/Biometrics$OnInitializedListener;)V = InitializeBiometrics(Com.Credenceid.Biometrics.IBiometricsOnInitializedListener)
  onBiometricsInitialized(Lcom/credenceid/biometrics/Biometrics$ResultCode;Ljava/lang/String;Ljava/lang/String;)V = OnBiometricsInitialized(Com.Credenceid.Biometrics.BiometricsResultCode, string, string)
  onEKTPCardRead(Lcom/credenceid/biometrics/Biometrics$ResultCode;Ljava/lang/String;[B)V = OnEKTPCardRead(Com.Credenceid.Biometrics.BiometricsResultCode, string, byte[])
  onFingerprintGrabbed(Lcom/credenceid/biometrics/Biometrics$ResultCode;Landroid/graphics/Bitmap;[BLjava/lang/String;Ljava/lang/String;)V = OnFingerprintGrabbed(Com.Credenceid.Biometrics.BiometricsResultCode, Android.Graphics.Bitmap, byte[], string, string)
  onIrisesCaptured(Lcom/credenceid/biometrics/Biometrics$ResultCode;Landroid/graphics/Bitmap;Landroid/graphics/Bitmap;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V = OnIrisesCaptured(Com.Credenceid.Biometrics.BiometricsResultCode, Android.Graphics.Bitmap, Android.Graphics.Bitmap, string, string, string)
  openFingerprintReader(Lcom/credenceid/biometrics/Biometrics$FingerprintReaderStatusListener;)V = OpenFingerprintReader(Com.Credenceid.Biometrics.IBiometricsFingerprintReaderStatusListener)
  openMRZ(Lcom/credenceid/biometrics/Biometrics$MRZStatusListener;)V = OpenMRZ(Com.Credenceid.Biometrics.IBiometricsMRZStatusListener)
  readICAODocument(Ljava/lang/String;Ljava/lang/String;ZLcom/credenceid/biometrics/Biometrics$ICAODocumentReadListener;)V = ReadICAODocument(string, string, bool, Com.Credenceid.Biometrics.IBiometricsCAODocumentReadListener)
  readICAODocument(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Lcom/credenceid/biometrics/Biometrics$ICAODocumentReadListener;)V = ReadICAODocument(string, string, string, Com.Credenceid.Biometrics.IBiometricsCAODocumentReadListener)
  readICAODocument(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;ZLcom/credenceid/biometrics/Biometrics$ICAODocumentReadListener;)V = ReadICAODocument(string, string, string, string, bool, Com.Credenceid.Biometrics.IBiometricsCAODocumentReadListener)
  readMRZ(Lcom/credenceid/biometrics/Biometrics$OnMRZReaderListener;)V = ReadMRZ(Com.Credenceid.Biometrics.IBiometricsOnMRZReaderListener)
  readSmartCard(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Lcom/credenceid/biometrics/Biometrics$GIcaoReadListener;)V = ReadSmartCard(string, string, string, Com.Credenceid.Biometrics.IBiometricsGIcaoReadListener)
  readSmartCard(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Lcom/credenceid/biometrics/Biometrics$GNIDReadListener;)V = ReadSmartCard(string, string, string, Com.Credenceid.Biometrics.IBiometricsGNIDReadListener)
  registerCardStatusListener(Lcom/credenceid/biometrics/Biometrics$OnCardStatusListener;)V = RegisterCardStatusListener(Com.Credenceid.Biometrics.IBiometricsOnCardStatusListener)
  registerEPassportStatusListener(Lcom/credenceid/biometrics/Biometrics$OnEPassportStatusListener;)V = RegisterEPassportStatusListener(Com.Credenceid.Biometrics.IBiometricsOnEPassportStatusListener)
  registerMRZDocumentStatusListener(Lcom/credenceid/biometrics/Biometrics$OnMRZDocumentStatusListener;)V = RegisterMRZDocumentStatusListener(Com.Credenceid.Biometrics.IBiometricsOnMRZDocumentStatusListener)
  registerOnMRZReaderListener(Lcom/credenceid/biometrics/Biometrics$OnMRZReaderListener;)V = RegisterOnMRZReaderListener(Com.Credenceid.Biometrics.IBiometricsOnMRZReaderListener)
  setPreferences(Ljava/lang/String;Ljava/lang/String;Lcom/credenceid/biometrics/Biometrics$PreferencesListener;)V = SetPreferences(string, string, Com.Credenceid.Biometrics.IBiometricsPreferencesListener)
  switchMobileData(ZLcom/credenceid/biometrics/Biometrics$OnMobileDataChangedListener;)V = SwitchMobileData(bool, Com.Credenceid.Biometrics.IBiometricsOnMobileDataChangedListener)
com/credenceid/biometrics/BiometricsManager = Com.Credenceid.Biometrics.BiometricsManager
  <init>(Landroid/app/Activity;)V = .ctor(Android.App.Activity)
  <init>(Landroid/content/Context;)V = .ctor(Android.Content.Context)
  getDeviceFamily()Lcom/credenceid/biometrics/DeviceFamily; = DeviceFamily
  getDeviceID()Ljava/lang/String; = DeviceID
  getDeviceType()Lcom/credenceid/biometrics/DeviceType; = DeviceType
  getFingerprintScannerType()Lcom/credenceid/biometrics/Biometrics$FingerprintScannerType; = FingerprintScannerType
  hasCardReader()Z = HasCardReader
  hasFingerprintScanner()Z = HasFingerprintScanner
  hasFMDMatcher()Z = HasFMDMatcher
  hasIrisScanner()Z = HasIrisScanner
  hasMRZReader()Z = HasMRZReader
  hasNFCCardReader()Z = HasNFCCardReader
  hasUSBCamera()Z = HasUSBCamera
  hasUSBFileAccessEnabling()Z = HasUSBFileAccessEnabling
  getProductName()Ljava/lang/String; = ProductName
  getSDKJarVersion()Ljava/lang/String; = SDKJarVersion
  getServiceVersion()Ljava/lang/String; = ServiceVersion
  analyzeFace(Landroid/graphics/Bitmap;Lcom/credenceid/face/FaceEngine$OnAnalyzeFaceImageListener;)V = AnalyzeFace(Android.Graphics.Bitmap, Com.Credenceid.Face.IFaceEngineOnAnalyzeFaceImageListener)
  analyzeFace([BIILcom/credenceid/face/FaceEngine$OnAnalyzeFaceImageListener;)V = AnalyzeFace(byte[], int, int, Com.Credenceid.Face.IFaceEngineOnAnalyzeFaceImageListener)
  analyzeFaceSync(Landroid/graphics/Bitmap;I)Lcom/credenceid/face/AnalyzeFaceSyncResponse; = AnalyzeFaceSync(Android.Graphics.Bitmap, int)
  analyzeFaceSync([BIII)Lcom/credenceid/face/AnalyzeFaceSyncResponse; = AnalyzeFaceSync(byte[], int, int, int)
  biometricsInitialized()Z = BiometricsInitialized()
  cameraTorchEnable(Z)Z = CameraTorchEnable(bool)
  cancelCapture()V = CancelCapture()
  captureIrises(Lcom/credenceid/biometrics/Biometrics$EyeSelection;Lcom/credenceid/biometrics/Biometrics$OnIrisesCapturedListener;)V = CaptureIrises(Com.Credenceid.Biometrics.BiometricsEyeSelection, Com.Credenceid.Biometrics.IBiometricsOnIrisesCapturedListener)
  cardCloseCommand()V = CardCloseCommand()
  cardCommand(Lcom/credenceid/biometrics/ApduCommand;ZLcom/credenceid/biometrics/Biometrics$OnCardCommandListener;)V = CardCommand(Com.Credenceid.Biometrics.ApduCommand, bool, Com.Credenceid.Biometrics.IBiometricsOnCardCommandListener)
  cardCommand(Lcom/credenceid/biometrics/ApduCommand;ZLcom/credenceid/biometrics/Biometrics$OnCardCommandSyncResultListener;)V = CardCommand(Com.Credenceid.Biometrics.ApduCommand, bool, Com.Credenceid.Biometrics.IBiometricsOnCardCommandSyncResultListener)
  cardCommandSync(Lcom/credenceid/biometrics/ApduCommand;ZI)Lcom/credenceid/biometrics/CardCommandResponse; = CardCommandSync(Com.Credenceid.Biometrics.ApduCommand, bool, int)
  cardConnectSync(I)Z = CardConnectSync(int)
  cardDisconnectSync(I)Z = CardDisconnectSync(int)
  cardOpenCommand(Lcom/credenceid/biometrics/Biometrics$CardReaderStatusListener;)V = CardOpenCommand(Com.Credenceid.Biometrics.IBiometricsCardReaderStatusListener)
  closeFingerprintReader()V = CloseFingerprintReader()
  closeIrisScanner()V = CloseIrisScanner()
  closeMRZ()V = CloseMRZ()
  compareFace([B[BLcom/credenceid/face/FaceEngine$OnMatchFaceTemplatesListener;)V = CompareFace(byte[], byte[], Com.Credenceid.Face.IFaceEngineOnMatchFaceTemplatesListener)
  compareFaceSync([B[BI)Lcom/credenceid/face/CompareFaceSyncResponse; = CompareFaceSync(byte[], byte[], int)
  compareFMD([B[BLcom/credenceid/biometrics/Biometrics$FMDFormat;Lcom/credenceid/biometrics/Biometrics$OnCompareFMDListener;)V = CompareFMD(byte[], byte[], Com.Credenceid.Biometrics.BiometricsFMDFormat, Com.Credenceid.Biometrics.IBiometricsOnCompareFMDListener)
  compareFMDSync([B[BLcom/credenceid/biometrics/Biometrics$FMDFormat;I)Lcom/credenceid/biometrics/CompareFMDSyncResponse; = CompareFMDSync(byte[], byte[], Com.Credenceid.Biometrics.BiometricsFMDFormat, int)
  compressToWSQ(Ljava/lang/String;FLcom/credenceid/biometrics/Biometrics$OnCompressToWSQListener;)V = CompressToWSQ(string, float, Com.Credenceid.Biometrics.IBiometricsOnCompressToWSQListener)
  convertCCFToFMD([BLcom/credenceid/biometrics/Biometrics$OnCCFToFMDConversionListener;)V = ConvertCCFToFMD(byte[], Com.Credenceid.Biometrics.IBiometricsOnCCFToFMDConversionListener)
  convertCCFToFMD([BSSSSLcom/credenceid/biometrics/Biometrics$OnCCFToFMDConversionListener;)V = ConvertCCFToFMD(byte[], short, short, short, short, Com.Credenceid.Biometrics.IBiometricsOnCCFToFMDConversionListener)
  convertCCFToFMDSync([BSSSSI)Lcom/credenceid/biometrics/CCFToFMDSyncResponse; = ConvertCCFToFMDSync(byte[], short, short, short, short, int)
  convertFMDToCCF([BLcom/credenceid/biometrics/Biometrics$OnFMDToCCFConversionListener;)V = ConvertFMDToCCF(byte[], Com.Credenceid.Biometrics.IBiometricsOnFMDToCCFConversionListener)
  convertFMDToCCFSync([BI)Lcom/credenceid/biometrics/FMDToCCFSyncResponse; = ConvertFMDToCCFSync(byte[], int)
  convertToFMD(Landroid/graphics/Bitmap;Lcom/credenceid/biometrics/Biometrics$FMDFormat;Lcom/credenceid/biometrics/Biometrics$OnConvertToFMDListener;)V = ConvertToFMD(Android.Graphics.Bitmap, Com.Credenceid.Biometrics.BiometricsFMDFormat, Com.Credenceid.Biometrics.IBiometricsOnConvertToFMDListener)
  convertToFMD([BLcom/credenceid/biometrics/Biometrics$FMDFormat;Lcom/credenceid/biometrics/Biometrics$OnConvertToFMDListener;)V = ConvertToFMD(byte[], Com.Credenceid.Biometrics.BiometricsFMDFormat, Com.Credenceid.Biometrics.IBiometricsOnConvertToFMDListener)
  convertToFMDSync(Landroid/graphics/Bitmap;Lcom/credenceid/biometrics/Biometrics$FMDFormat;I)Lcom/credenceid/biometrics/ConvertToFMDSyncResponse; = ConvertToFMDSync(Android.Graphics.Bitmap, Com.Credenceid.Biometrics.BiometricsFMDFormat, int)
  convertToFMDSync([BLcom/credenceid/biometrics/Biometrics$FMDFormat;I)Lcom/credenceid/biometrics/ConvertToFMDSyncResponse; = ConvertToFMDSync(byte[], Com.Credenceid.Biometrics.BiometricsFMDFormat, int)
  createFaceTemplate(Landroid/graphics/Bitmap;Lcom/credenceid/face/FaceEngine$OnCreateFaceTemplateListener;)V = CreateFaceTemplate(Android.Graphics.Bitmap, Com.Credenceid.Face.IFaceEngineOnCreateFaceTemplateListener)
  createFaceTemplate([BIILcom/credenceid/face/FaceEngine$OnCreateFaceTemplateListener;)V = CreateFaceTemplate(byte[], int, int, Com.Credenceid.Face.IFaceEngineOnCreateFaceTemplateListener)
  createFaceTemplateSync(Landroid/graphics/Bitmap;I)Lcom/credenceid/face/CreateFaceTemplateSyncResponse; = CreateFaceTemplateSync(Android.Graphics.Bitmap, int)
  createFaceTemplateSync([BIII)Lcom/credenceid/face/CreateFaceTemplateSyncResponse; = CreateFaceTemplateSync(byte[], int, int, int)
  decompressWSQ([BLcom/credenceid/biometrics/Biometrics$OnDecompressWSQListener;)V = DecompressWSQ(byte[], Com.Credenceid.Biometrics.IBiometricsOnDecompressWSQListener)
  decompressWSQ(Ljava/lang/String;Lcom/credenceid/biometrics/Biometrics$OnDecompressWSQListener;)V = DecompressWSQ(string, Com.Credenceid.Biometrics.IBiometricsOnDecompressWSQListener)
  delete(ILcom/credenceid/database/BiometricDatabase$OnDeleteCallback;)V = Delete(int, Com.Credenceid.Database.IBiometricDatabaseOnDeleteCallback)
  detectFace(Landroid/graphics/Bitmap;Lcom/credenceid/face/FaceEngine$OnDetectFaceListener;)V = DetectFace(Android.Graphics.Bitmap, Com.Credenceid.Face.IFaceEngineOnDetectFaceListener)
  detectFace([BIILcom/credenceid/face/FaceEngine$OnDetectFaceListener;)V = DetectFace(byte[], int, int, Com.Credenceid.Face.IFaceEngineOnDetectFaceListener)
  detectFaceSync(Landroid/graphics/Bitmap;I)Lcom/credenceid/face/DetectFaceSyncResponse; = DetectFaceSync(Android.Graphics.Bitmap, int)
  detectFaceSync([BIII)Lcom/credenceid/face/DetectFaceSyncResponse; = DetectFaceSync(byte[], int, int, int)
  ektpCardReadCommand(I[BLcom/credenceid/biometrics/Biometrics$OnEktpCardReadListener;)V = EktpCardReadCommand(int, byte[], Com.Credenceid.Biometrics.IBiometricsOnEktpCardReadListener)
  enroll(ILcom/credenceid/database/FingerprintRecord;Lcom/credenceid/database/FaceRecord;Lcom/credenceid/database/IrisRecord;Lcom/credenceid/database/BiometricDatabase$OnEnrollCallback;)V = Enroll(int, Com.Credenceid.Database.FingerprintRecord, Com.Credenceid.Database.FaceRecord, Com.Credenceid.Database.IrisRecord, Com.Credenceid.Database.IBiometricDatabaseOnEnrollCallback)
  enroll(I[Lcom/credenceid/database/FingerprintRecord;Lcom/credenceid/database/FaceRecord;[Lcom/credenceid/database/IrisRecord;Lcom/credenceid/database/BiometricDatabase$OnEnrollCallback;)V = Enroll(int, Com.Credenceid.Database.FingerprintRecord[], Com.Credenceid.Database.FaceRecord, Com.Credenceid.Database.IrisRecord[], Com.Credenceid.Database.IBiometricDatabaseOnEnrollCallback)
  ePassportCloseCommand()V = EPassportCloseCommand()
  ePassportCommand(Lcom/credenceid/biometrics/ApduCommand;ZLcom/credenceid/biometrics/Biometrics$OnEPassportCommandListener;)V = EPassportCommand(Com.Credenceid.Biometrics.ApduCommand, bool, Com.Credenceid.Biometrics.IBiometricsOnEPassportCommandListener)
  ePassportOpenCommand(Lcom/credenceid/biometrics/Biometrics$EPassportReaderStatusListener;)V = EPassportOpenCommand(Com.Credenceid.Biometrics.IBiometricsEPassportReaderStatusListener)
  finalizeBiometrics(Z)V = FinalizeBiometrics(bool)
  generateTerminalIsCertificate(Lcom/credenceid/biometrics/Biometrics$generateTerminalIsCertificateListener;)V = GenerateTerminalIsCertificate(Com.Credenceid.Biometrics.IBiometricsGenerateTerminalIsCertificateListener)
  getFingerQuality(Landroid/graphics/Bitmap;Lcom/credenceid/biometrics/Biometrics$OnGetFingerQualityListener;)V = GetFingerQuality(Android.Graphics.Bitmap, Com.Credenceid.Biometrics.IBiometricsOnGetFingerQualityListener)
  getFingerQuality(Ljava/lang/String;Lcom/credenceid/biometrics/Biometrics$OnFingerQualityListener;)V = GetFingerQuality(string, Com.Credenceid.Biometrics.IBiometricsOnFingerQualityListener)
  getPreferences(Ljava/lang/String;Lcom/credenceid/biometrics/Biometrics$PreferencesListener;)V = GetPreferences(string, Com.Credenceid.Biometrics.IBiometricsPreferencesListener)
  getProviderDetails(Lcom/credenceid/biometrics/Biometrics$OnGetProviderDetailsListener;)V = GetProviderDetails(Com.Credenceid.Biometrics.IBiometricsOnGetProviderDetailsListener)
  grabFingerprint(Lcom/credenceid/biometrics/Biometrics$ScanType;ZLcom/credenceid/biometrics/Biometrics$OnFingerprintGrabbedFullListener;)V = GrabFingerprint(Com.Credenceid.Biometrics.BiometricsScanType, bool, Com.Credenceid.Biometrics.IBiometricsOnFingerprintGrabbedFullListener)
  grabFingerprint(Lcom/credenceid/biometrics/Biometrics$ScanType;ZLcom/credenceid/biometrics/Biometrics$OnFingerprintGrabbedListener;)V = GrabFingerprint(Com.Credenceid.Biometrics.BiometricsScanType, bool, Com.Credenceid.Biometrics.IBiometricsOnFingerprintGrabbedListener)
  grabFingerprint(Lcom/credenceid/biometrics/Biometrics$ScanType;ZLcom/credenceid/biometrics/Biometrics$OnFingerprintGrabbedRawListener;)V = GrabFingerprint(Com.Credenceid.Biometrics.BiometricsScanType, bool, Com.Credenceid.Biometrics.IBiometricsOnFingerprintGrabbedRawListener)
  grabFingerprint(Lcom/credenceid/biometrics/Biometrics$ScanType;ZLcom/credenceid/biometrics/Biometrics$OnFingerprintGrabbedWSQListener;)V = GrabFingerprint(Com.Credenceid.Biometrics.BiometricsScanType, bool, Com.Credenceid.Biometrics.IBiometricsOnFingerprintGrabbedWSQListener)
  grabFingerprint(Lcom/credenceid/biometrics/Biometrics$ScanType;ZLcom/credenceid/biometrics/Biometrics$OnMultiFingerprintGrabbedListener;)V = GrabFingerprint(Com.Credenceid.Biometrics.BiometricsScanType, bool, Com.Credenceid.Biometrics.IBiometricsOnMultiFingerprintGrabbedListener)
  grabFingerprint(Lcom/credenceid/biometrics/Biometrics$ScanType;Lcom/credenceid/biometrics/Biometrics$OnFingerprintGrabbedFullListener;)V = GrabFingerprint(Com.Credenceid.Biometrics.BiometricsScanType, Com.Credenceid.Biometrics.IBiometricsOnFingerprintGrabbedFullListener)
  grabFingerprint(Lcom/credenceid/biometrics/Biometrics$ScanType;Lcom/credenceid/biometrics/Biometrics$OnFingerprintGrabbedListener;)V = GrabFingerprint(Com.Credenceid.Biometrics.BiometricsScanType, Com.Credenceid.Biometrics.IBiometricsOnFingerprintGrabbedListener)
  grabFingerprint(Lcom/credenceid/biometrics/Biometrics$ScanType;Lcom/credenceid/biometrics/Biometrics$OnFingerprintGrabbedWSQListener;)V = GrabFingerprint(Com.Credenceid.Biometrics.BiometricsScanType, Com.Credenceid.Biometrics.IBiometricsOnFingerprintGrabbedWSQListener)
  grabFingerprintSync(I)Lcom/credenceid/biometrics/FingerprintSyncResponse; = GrabFingerprintSync(int)
  initializeBiometrics(Lcom/credenceid/biometrics/Biometrics$OnInitializedListener;)V = InitializeBiometrics(Com.Credenceid.Biometrics.IBiometricsOnInitializedListener)
  match(Lcom/credenceid/database/FingerprintRecord;Lcom/credenceid/database/FaceRecord;Lcom/credenceid/database/IrisRecord;Lcom/credenceid/database/BiometricDatabase$OnMatchCallback;)V = Match(Com.Credenceid.Database.FingerprintRecord, Com.Credenceid.Database.FaceRecord, Com.Credenceid.Database.IrisRecord, Com.Credenceid.Database.IBiometricDatabaseOnMatchCallback)
  match([Lcom/credenceid/database/FingerprintRecord;Lcom/credenceid/database/FaceRecord;[Lcom/credenceid/database/IrisRecord;Lcom/credenceid/database/BiometricDatabase$OnMatchCallback;)V = Match(Com.Credenceid.Database.FingerprintRecord[], Com.Credenceid.Database.FaceRecord, Com.Credenceid.Database.IrisRecord[], Com.Credenceid.Database.IBiometricDatabaseOnMatchCallback)
  onActivityResult(IILandroid/content/Intent;)V = OnActivityResult(int, int, Android.Content.Intent)
  openFingerprintReader(Lcom/credenceid/biometrics/Biometrics$FingerprintReaderStatusListener;)V = OpenFingerprintReader(Com.Credenceid.Biometrics.IBiometricsFingerprintReaderStatusListener)
  openMRZ(Lcom/credenceid/biometrics/Biometrics$MRZStatusListener;)V = OpenMRZ(Com.Credenceid.Biometrics.IBiometricsMRZStatusListener)
  read(ILcom/credenceid/database/BiometricDatabase$OnReadCallback;)V = Read(int, Com.Credenceid.Database.IBiometricDatabaseOnReadCallback)
  readICAODocument(Ljava/lang/String;Ljava/lang/String;ZLcom/credenceid/biometrics/Biometrics$ICAODocumentReadListener;)V = ReadICAODocument(string, string, bool, Com.Credenceid.Biometrics.IBiometricsCAODocumentReadListener)
  readICAODocument(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Lcom/credenceid/biometrics/Biometrics$ICAODocumentReadListener;)V = ReadICAODocument(string, string, string, Com.Credenceid.Biometrics.IBiometricsCAODocumentReadListener)
  readICAODocument(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;ZLcom/credenceid/biometrics/Biometrics$ICAODocumentReadListener;)V = ReadICAODocument(string, string, string, string, bool, Com.Credenceid.Biometrics.IBiometricsCAODocumentReadListener)
  readMRZ(Lcom/credenceid/biometrics/Biometrics$OnMRZReaderListener;)V = ReadMRZ(Com.Credenceid.Biometrics.IBiometricsOnMRZReaderListener)
  readSmartCard(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Lcom/credenceid/biometrics/Biometrics$GIcaoReadListener;)V = ReadSmartCard(string, string, string, Com.Credenceid.Biometrics.IBiometricsGIcaoReadListener)
  readSmartCard(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Lcom/credenceid/biometrics/Biometrics$GNIDReadListener;)V = ReadSmartCard(string, string, string, Com.Credenceid.Biometrics.IBiometricsGNIDReadListener)
  registerCardStatusListener(Lcom/credenceid/biometrics/Biometrics$OnCardStatusListener;)V = RegisterCardStatusListener(Com.Credenceid.Biometrics.IBiometricsOnCardStatusListener)
  registerEPassportStatusListener(Lcom/credenceid/biometrics/Biometrics$OnEPassportStatusListener;)V = RegisterEPassportStatusListener(Com.Credenceid.Biometrics.IBiometricsOnEPassportStatusListener)
  registerMRZDocumentStatusListener(Lcom/credenceid/biometrics/Biometrics$OnMRZDocumentStatusListener;)V = RegisterMRZDocumentStatusListener(Com.Credenceid.Biometrics.IBiometricsOnMRZDocumentStatusListener)
  registerOnMRZReaderListener(Lcom/credenceid/biometrics/Biometrics$OnMRZReaderListener;)V = RegisterOnMRZReaderListener(Com.Credenceid.Biometrics.IBiometricsOnMRZReaderListener)
  sendMessageToService(Landroid/os/Message;)V = SendMessageToService(Android.OS.Message)
  setPreferences(Ljava/lang/String;Ljava/lang/String;Lcom/credenceid/biometrics/Biometrics$PreferencesListener;)V = SetPreferences(string, string, Com.Credenceid.Biometrics.IBiometricsPreferencesListener)
  switchMobileData(ZLcom/credenceid/biometrics/Biometrics$OnMobileDataChangedListener;)V = SwitchMobileData(bool, Com.Credenceid.Biometrics.IBiometricsOnMobileDataChangedListener)
  verify(ILcom/credenceid/database/FingerprintRecord;Lcom/credenceid/database/FaceRecord;Lcom/credenceid/database/IrisRecord;Lcom/credenceid/database/BiometricDatabase$OnVerifyCallback;)V = Verify(int, Com.Credenceid.Database.FingerprintRecord, Com.Credenceid.Database.FaceRecord, Com.Credenceid.Database.IrisRecord, Com.Credenceid.Database.IBiometricDatabaseOnVerifyCallback)
  verify(I[Lcom/credenceid/database/FingerprintRecord;Lcom/credenceid/database/FaceRecord;[Lcom/credenceid/database/IrisRecord;Lcom/credenceid/database/BiometricDatabase$OnVerifyCallback;)V = Verify(int, Com.Credenceid.Database.FingerprintRecord[], Com.Credenceid.Database.FaceRecord, Com.Credenceid.Database.IrisRecord[], Com.Credenceid.Database.IBiometricDatabaseOnVerifyCallback)
com/credenceid/biometrics/CardCommandResponse = Com.Credenceid.Biometrics.CardCommandResponse
  <init>(BB[BLcom/credenceid/biometrics/Biometrics$ResultCode;)V = .ctor(sbyte, sbyte, byte[], Com.Credenceid.Biometrics.BiometricsResultCode)
  data = Data
  result = Result
  sw1 = Sw1
  sw2 = Sw2
com/credenceid/biometrics/CCFToFMDSyncResponse = Com.Credenceid.Biometrics.CCFToFMDSyncResponse
  <init>(Lcom/credenceid/biometrics/Biometrics$ResultCode;)V = .ctor(Com.Credenceid.Biometrics.BiometricsResultCode)
  <init>(Lcom/credenceid/biometrics/Biometrics$ResultCode;[B)V = .ctor(Com.Credenceid.Biometrics.BiometricsResultCode, byte[])
  FMD = Fmd
  resultCode = ResultCode
com/credenceid/biometrics/CompareFMDSyncResponse = Com.Credenceid.Biometrics.CompareFMDSyncResponse
  <init>(Lcom/credenceid/biometrics/Biometrics$ResultCode;F)V = .ctor(Com.Credenceid.Biometrics.BiometricsResultCode, float)
  dissimilarity = Dissimilarity
  resultCode = ResultCode
com/credenceid/biometrics/ConvertToFMDSyncResponse = Com.Credenceid.Biometrics.ConvertToFMDSyncResponse
  <init>(Lcom/credenceid/biometrics/Biometrics$ResultCode;)V = .ctor(Com.Credenceid.Biometrics.BiometricsResultCode)
  <init>(Lcom/credenceid/biometrics/Biometrics$ResultCode;[B)V = .ctor(Com.Credenceid.Biometrics.BiometricsResultCode, byte[])
  FMD = Fmd
  resultCode = ResultCode
com/credenceid/biometrics/DeviceFamily = Com.Credenceid.Biometrics.DeviceFamily
  CredenceOne = CredenceOne
  CredenceTAB = CredenceTAB
  CredenceTAB2 = CredenceTAB2
  CredenceTwo = CredenceTwo
  Generic_Android = GenericAndroid
  InvalidDevice = InvalidDevice
  Starlight = Starlight
  TridentOne = TridentOne
  TridentTwo = TridentTwo
  Twizzler = Twizzler
  valueOf(Ljava/lang/String;)Lcom/credenceid/biometrics/DeviceFamily; = ValueOf(string)
  values()[Lcom/credenceid/biometrics/DeviceFamily; = Values()
com/credenceid/biometrics/DeviceType = Com.Credenceid.Biometrics.DeviceType
  CredenceOneV1_F = CredenceOneV1F
  CredenceOneV2_FC = CredenceOneV2FC
  CredenceOneV3_FCM = CredenceOneV3FCM
  CredenceOneV4_E = CredenceOneV4E
  CredenceTab2_F = CredenceTab2F
  CredenceTab2_FC = CredenceTab2FC
  CredenceTab2_FCM = CredenceTab2FCM
  CredenceTab2_FM = CredenceTab2FM
  CredenceTabV1_F = CredenceTabV1F
  CredenceTabV2_FC = CredenceTabV2FC
  CredenceTabV3_FM = CredenceTabV3FM
  CredenceTabV4_FCM = CredenceTabV4FCM
  CredenceTwoR1_2_F_only = CredenceTwoR12FOnly
  CredenceTwoR3_4_FC = CredenceTwoR34FC
  CredenceTwoR5_F = CredenceTwoR5F
  CredenceTwoR5_FC = CredenceTwoR5FC
  Generic_Android = GenericAndroid
  InvalidDevice = InvalidDevice
  Starlight = Starlight
  TridentOne = TridentOne
  TridentTwo = TridentTwo
  Twizzler = Twizzler
  valueOf(Ljava/lang/String;)Lcom/credenceid/biometrics/DeviceType; = ValueOf(string)
  values()[Lcom/credenceid/biometrics/DeviceType; = Values()
com/credenceid/biometrics/FingerprintSyncResponse = Com.Credenceid.Biometrics.FingerprintSyncResponse
  <init>(Landroid/graphics/Bitmap;[BLcom/credenceid/biometrics/Biometrics$ResultCode;Ljava/lang/String;)V = .ctor(Android.Graphics.Bitmap, byte[], Com.Credenceid.Biometrics.BiometricsResultCode, string)
  bitmap = Bitmap
  rawImage = RawImage
  resultCode = ResultCode
  status = Status
com/credenceid/biometrics/FingerQuality = Com.Credenceid.Biometrics.FingerQuality
  <init>()V = .ctor()
  cbeffProductType = CbeffProductType
  formatSize = FormatSize
  g = G
  height = Height
  horizontalResolution = HorizontalResolution
  impressionType = ImpressionType
  patternClass = PatternClass
  position = Position
  ridgeCountsType = RidgeCountsType
  templateQuality = TemplateQuality
  verticalResolution = VerticalResolution
  width = Width
  fromArray([Ljava/lang/String;)Lcom/credenceid/biometrics/FingerQuality; = FromArray(string[])
  setQualityScore(I)V = SetQualityScore(int)
  toArray()[Ljava/lang/String; = ToArray()
com/credenceid/biometrics/FMDToCCFSyncResponse = Com.Credenceid.Biometrics.FMDToCCFSyncResponse
  <init>(Lcom/credenceid/biometrics/Biometrics$ResultCode;)V = .ctor(Com.Credenceid.Biometrics.BiometricsResultCode)
  <init>(Lcom/credenceid/biometrics/Biometrics$ResultCode;[B)V = .ctor(Com.Credenceid.Biometrics.BiometricsResultCode, byte[])
  CCF = Ccf
  resultCode = ResultCode
com/credenceid/biometrics/IrisQuality = Com.Credenceid.Biometrics.IrisQuality
  <init>()V = .ctor()
  grayLevelSpread = GrayLevelSpread
  interlace = Interlace
  irisPupilBoundaryShape = IrisPupilBoundaryShape
  irisPupilContrast = IrisPupilContrast
  irisScleraBoundaryShape = IrisScleraBoundaryShape
  irisScleraContrast = IrisScleraContrast
  irisSize = IrisSize
  margin = Margin
  pupilIrisRatio = PupilIrisRatio
  quality = Quality
  sharpness = Sharpness
  signalToNoiseRatio = SignalToNoiseRatio
  usableIrisArea = UsableIrisArea
  fromArray([I)Lcom/credenceid/biometrics/IrisQuality; = FromArray(int[])
  toArray()[I = ToArray()
com/credenceid/BuildConfig = Com.Credenceid.BuildConfig
  <init>()V = .ctor()
  APPLICATION_ID = ApplicationId
  BUILD_TYPE = BuildType
  DEBUG = Debug
  FLAVOR = Flavor
  LIBRARY_PACKAGE_NAME = LibraryPackageName
  VERSION_CODE = VersionCode
  VERSION_NAME = VersionName
com/credenceid/constants/ServiceConstants = Com.Credenceid.Constants.ServiceConstants
  <init>()V = .ctor()
  ALGORITHMS_PACKAGE = AlgorithmsPackage
  ALGORITHMS_SERVICE = AlgorithmsService
  ANALYZE = Analyze
  ANALYZE_SYNC = AnalyzeSync
  ANSI_378_2004 = Ansi3782004
  APDU = Apdu
  BC_CCF_TO_FMD_INPUT = BcCcfToFmdInput
  BC_CCF_TO_FMD_INPUT_RESOLUTION_X = BcCcfToFmdInputResolutionX
  BC_CCF_TO_FMD_INPUT_RESOLUTION_Y = BcCcfToFmdInputResolutionY
  BC_CCF_TO_FMD_INPUT_SIZE_X = BcCcfToFmdInputSizeX
  BC_CCF_TO_FMD_INPUT_SIZE_Y = BcCcfToFmdInputSizeY
  BC_CCF_TO_FMD_OUTPUT = BcCcfToFmdOutput
  BC_CONVERT_CCF_TO_FMD = BcConvertCcfToFmd
  BC_CONVERT_CCF_TO_FMD_SYNC = BcConvertCcfToFmdSync
  BC_CONVERT_FMD_TO_CCF = BcConvertFmdToCcf
  BC_CONVERT_FMD_TO_CCF_SYNC = BcConvertFmdToCcfSync
  BC_FMD_TO_CCF_INPUT = BcFmdToCcfInput
  BC_FMD_TO_CCF_OUTPUT = BcFmdToCcfOutput
  BOTH_EYES = BothEyes
  CAMERA_FLASH_CONTROL = CameraFlashControl
  CANCEL_CAPTURE = CancelCapture
  CAPTURE_IRISES = CaptureIrises
  CARD_ATR = CardAtr
  CARD_CLOSE_COMMAND = CardCloseCommand
  CARD_COMMAND = CardCommand
  CARD_CONNECT_SYNC = CardConnectSync
  CARD_CURRENT_STATUS = CardCurrentStatus
  CARD_DISCONNECT_SYNC = CardDisconnectSync
  CARD_OPEN_COMMAND = CardOpenCommand
  CARD_PREVIOUS_STATUS = CardPreviousStatus
  CARD_READER = CardReader
  CARD_STATUS_CHANGE = CardStatusChange
  CARD_SYNC_COMMAND = CardSyncCommand
  CHECK_ALGORITHM_LICENSES = CheckAlgorithmLicenses
  CLOSE_FINGERPRINT = CloseFingerprint
  CLOSE_IRIS = CloseIris
  CLOSE_MRZ = CloseMrz
  COMPARE = Compare
  COMPARE_FMD = CompareFmd
  COMPARE_FMD_1_TO_N = CompareFmd1ToN
  COMPARE_FMD_SYNC = CompareFmdSync
  COMPARE_SYNC = CompareSync
  CONVERT_FMD = ConvertFmd
  CONVERT_FMD_SYNC = ConvertFmdSync
  CONVERT_JPEG = ConvertJpeg
  CONVERT_KIND7 = ConvertKind7
  CONVERT_WSQ = ConvertWsq
  CREATE_TEMPLATE = CreateTemplate
  CREATE_TEMPLATE_SYNC = CreateTemplateSync
  CREATE_WSQ_IMAGE = CreateWsqImage
  CREDENCE_IMAGE_CAPTURE = CredenceImageCapture
  CREDENCE_PACKAGE = CredencePackage
  CREDENCE_SDK_JAR_VERSION = CredenceSdkJarVersion
  CREDENCE_SERVICE = CredenceService
  DATABASE_API_IDS = DatabaseApiIds
  DECOMPRESS_WSQ = DecompressWsq
  DELETE = Delete
  DETECT = Detect
  DETECT_SYNC = DetectSync
  DEVICE_FAMILY = DeviceFamily
  DEVICE_ID = DeviceId
  DEVICE_TYPE = DeviceType
  DO_FW_UPDATE = DoFwUpdate
  ENABLE_FILE_ACCESS_OVER_USB = EnableFileAccessOverUsb
  ENROLL = Enroll
  ENROLL_BIOMETRICS = EnrollBiometrics
  EPASS_CARD_CLOSE = EpassCardClose
  EPASS_CARD_COMMAND = EpassCardCommand
  EPASS_CARD_OPEN = EpassCardOpen
  EPASSPORT_READER = EpassportReader
  FACE_API_IDS = FaceApiIds
  FACE_CAMERA = FaceCamera
  FACE_CAMERA_CAPTURE = FaceCameraCapture
  FACE_CAMERA_PREVIEW = FaceCameraPreview
  FACE_FILEPATH = FaceFilepath
  FACE_JPEG = FaceJpeg
  FACE_PNG = FacePng
  FACE_QUALITY = FaceQuality
  FAP10 = Fap10
  FAP20 = Fap20
  FAP30 = Fap30
  FAP45 = Fap45
  FAP50 = Fap50
  FINGERPRINT_API_IDS = FingerprintApiIds
  FINGERPRINT_SCANNER = FingerprintScanner
  FINGERPRINT_SCANNER_TYPE = FingerprintScannerType
  FINGER_QUALITY = FingerQuality
  FLASH_STATE = FlashState
  FMD_DATA_1 = FmdData1
  FMD_DATA_2 = FmdData2
  FMD_MATCHER = FmdMatcher
  FOUR_FINGERS = FourFingers
  FP_ARRAY = FpArray
  FP_BITMAP = FpBitmap
  FP_BITMAP_ARRAY = FpBitmapArray
  FP_BITMAP_FINGER1 = FpBitmapFinger1
  FP_BITMAP_FINGER2 = FpBitmapFinger2
  FP_FILEPATH = FpFilepath
  FP_FILEPATH_ARRAY = FpFilepathArray
  FP_FINGER1_FILEPATH = FpFinger1Filepath
  FP_FINGER2_FILEPATH = FpFinger2Filepath
  FP_FMD = FpFmd
  FP_FORMAT = FpFormat
  FP_HINT = FpHint
  FP_ISO = FpIso
  FP_ISO_FINGER1 = FpIsoFinger1
  FP_ISO_FINGER2 = FpIsoFinger2
  FP_RAW_IMAGE = FpRawImage
  FP_RAW_IMAGE_1 = FpRawImage1
  FP_RAW_IMAGE_2 = FpRawImage2
  FP_RAW_IMAGE_HINT = FpRawImageHint
  FP_SCORE = FpScore
  GENERATE_IS_CERTIFICATE_REQUEST = GenerateIsCertificateRequest
  GET_CARD_STATUS = GetCardStatus
  GET_CONFIGURATION = GetConfiguration
  GET_FACE_QUALITY = GetFaceQuality
  GET_FINGER_QUALITY = GetFingerQuality
  GET_NFIQ_SCORE = GetNfiqScore
  GET_PREFERENCES = GetPreferences
  GET_PROVIDERS_DETAILS = GetProvidersDetails
  GET_PROVIDERS_DETAILS_ID = GetProvidersDetailsId
  GRAB_FINGERPRINT = GrabFingerprint
  GRAB_FINGERPRINT_SYNC = GrabFingerprintSync
  ICAO_API_IDS = IcaoApiIds
  ICAO_READER_CLOSE = IcaoReaderClose
  ICAO_READER_OPEN = IcaoReaderOpen
  ICAO_READER_READ = IcaoReaderRead
  INNOVATRICS_LICENSE_KEY = InnovatricsLicenseKey
  IRIS_API_IDS = IrisApiIds
  IRIS_LEFT_BITMAP = IrisLeftBitmap
  IRIS_LEFT_FILEPATH = IrisLeftFilepath
  IRIS_QUALITY_LEFT = IrisQualityLeft
  IRIS_QUALITY_RIGHT = IrisQualityRight
  IRIS_RIGHT_BITMAP = IrisRightBitmap
  IRIS_RIGHT_FILEPATH = IrisRightFilepath
  IRIS_SCANNER = IrisScanner
  IRIS_STATUS = IrisStatus
  ISO_19794_2_2005 = Iso1979422005
  KIND7_LEFT_FILEPATH = Kind7LeftFilepath
  KIND7_RIGHT_FILEPATH = Kind7RightFilepath
  LEFT_EYE = LeftEye
  MATCH = Match
  MATCH_BIOMETRICS = MatchBiometrics
  MATCH_FACE = MatchFace
  MR_CURRENT_STATUS = MrCurrentStatus
  MRZ_DATA_PARSED_STRING = MrzDataParsedString
  MRZ_DATA_RAW_BYTES = MrzDataRawBytes
  MRZ_DATA_RAW_STRING = MrzDataRawString
  MRZ_PREVIOUS_STATUS = MrzPreviousStatus
  MRZ_READER = MrzReader
  MRZ_STATUS_CHANGE = MrzStatusChange
  MRZ_STATUS_STRING = MrzStatusString
  NFC_CARD = NfcCard
  NFC_DATA = NfcData
  NFC_STATUS_STRING = NfcStatusString
  NFC_STATUS_UPDATE = NfcStatusUpdate
  NFIQ_SCORE_DATA = NfiqScoreData
  NONE = None
  ON_PAUSE = OnPause
  OPEN_FINGERPRINT = OpenFingerprint
  OPEN_MRZ = OpenMrz
  PREFERENCES_KEY = PreferencesKey
  PREFERENCES_VALUE = PreferencesValue
  PRODUCT_NAME = ProductName
  PROTOCOL_T0_T1 = ProtocolT0T1
  READ = Read
  READ_DOCUMENT = ReadDocument
  READ_MRZ = ReadMrz
  READ_NFC = ReadNfc
  READ_SPECIFIC_DOCUMENT = ReadSpecificDocument
  RESULT_API_UNAVAILABLE = ResultApiUnavailable
  RESULT_FAIL = ResultFail
  RESULT_INTERMEDIATE = ResultIntermediate
  RESULT_OK = ResultOk
  RESULT_WARNING = ResultWarning
  RIGHT_EYE = RightEye
  ROLL_SINGLE_FINGER = RollSingleFinger
  SCARD_STATUS_CHANGE = ScardStatusChange
  SCREEN_OFF = ScreenOff
  SET_PREFERENCES = SetPreferences
  SINGLE_FINGER = SingleFinger
  STATUS_STRING = StatusString
  SUBJECT_FACEIMAGE = SubjectFaceimage
  SUBJECT_FACEMATCH = SubjectFacematch
  SUBJECT_FPMATCH = SubjectFpmatch
  SUBJECT_GPS = SubjectGps
  SUBJECT_ID = SubjectId
  SUBJECT_IRISMATCH = SubjectIrismatch
  SUBJECT_NAME = SubjectName
  SWITCH_DATA_STATUS_MESSAGE = SwitchDataStatusMessage
  SWITCH_MOBILE_DATA_FLAG = SwitchMobileDataFlag
  SWITCH_MOBILE_DATA_ID = SwitchMobileDataId
  SYSTEM_NORMAL = SystemNormal
  SYSTEM_OFF = SystemOff
  TIMED_OUT = TimedOut
  TWO_FINGERS = TwoFingers
  TWO_FINGERS_SPLIT = TwoFingersSplit
  UPDATE = Update
  USB_CAMERA = UsbCamera
  USB_FILE_ACCESS = UsbFileAccess
  USE_FLASH = UseFlash
  VERIFY = Verify
  VERSION_CODE = VersionCode
  VERSION_NAME = VersionName
  WSQ_ARRAY = WsqArray
  WSQ_ARRAY_1 = WsqArray1
  WSQ_ARRAY_2 = WsqArray2
  WSQ_BITRATE = WsqBitrate
  WSQ_FILEPATH = WsqFilepath
com/credenceid/CredenceConstants = Com.Credenceid.CredenceConstants
  <init>()V = .ctor()
  MINIMUM_VERSION_NAME = MinimumVersionName
com/credenceid/database/BiometricData = Com.Credenceid.Database.BiometricData
  <init>()V = .ctor()
  <init>([B)V = .ctor(byte[])
  <init>([B[B)V = .ctor(byte[], byte[])
  <init>([B[B[B)V = .ctor(byte[], byte[], byte[])
  <init>(Landroid/graphics/Bitmap;)V = .ctor(Android.Graphics.Bitmap)
  <init>(Landroid/graphics/Bitmap;Landroid/graphics/Bitmap;)V = .ctor(Android.Graphics.Bitmap, Android.Graphics.Bitmap)
  <init>(Landroid/graphics/Bitmap;Landroid/graphics/Bitmap;Landroid/graphics/Bitmap;)V = .ctor(Android.Graphics.Bitmap, Android.Graphics.Bitmap, Android.Graphics.Bitmap)
  <init>(Ljava/lang/String;)V = .ctor(string)
  <init>(Ljava/lang/String;Ljava/lang/String;)V = .ctor(string, string)
  <init>(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V = .ctor(string, string, string)
  getGUID()Ljava/lang/String; = GUID
  setGUID(Ljava/lang/String;)V = GUID
  getImages()Ljava/util/List; = Images
  getImagesAsBitmaps()Ljava/util/List; = ImagesAsBitmaps
  getTemplates()Ljava/util/List; = Templates
  deleteImage(Lcom/credenceid/database/ImageIndex;)V = DeleteImage(Com.Credenceid.Database.ImageIndex)
  deleteTemplate(Lcom/credenceid/database/ImageIndex;)V = DeleteTemplate(Com.Credenceid.Database.ImageIndex)
  getFirstValidImage()[B = GetFirstValidImage()
  getFirstValidTemplate()[B = GetFirstValidTemplate()
  getImage(Lcom/credenceid/database/ImageIndex;)[B = GetImage(Com.Credenceid.Database.ImageIndex)
  getImageAsBitmap(Lcom/credenceid/database/ImageIndex;)Landroid/graphics/Bitmap; = GetImageAsBitmap(Com.Credenceid.Database.ImageIndex)
  getTemplate(Lcom/credenceid/database/ImageIndex;)[B = GetTemplate(Com.Credenceid.Database.ImageIndex)
  setImage(Lcom/credenceid/database/ImageIndex;Landroid/graphics/Bitmap;)Z = SetImage(Com.Credenceid.Database.ImageIndex, Android.Graphics.Bitmap)
  setImage(Lcom/credenceid/database/ImageIndex;[B)Z = SetImage(Com.Credenceid.Database.ImageIndex, byte[])
  setImage(Lcom/credenceid/database/ImageIndex;Ljava/lang/String;)Z = SetImage(Com.Credenceid.Database.ImageIndex, string)
  setTemplate(Lcom/credenceid/database/ImageIndex;[B)Z = SetTemplate(Com.Credenceid.Database.ImageIndex, byte[])
com/credenceid/database/BiometricDatabase = Com.Credenceid.Database.IBiometricDatabase
  delete(ILcom/credenceid/database/BiometricDatabase$OnDeleteCallback;)V = Delete(int, Com.Credenceid.Database.IBiometricDatabaseOnDeleteCallback)
  enroll(ILcom/credenceid/database/FingerprintRecord;Lcom/credenceid/database/FaceRecord;Lcom/credenceid/database/IrisRecord;Lcom/credenceid/database/BiometricDatabase$OnEnrollCallback;)V = Enroll(int, Com.Credenceid.Database.FingerprintRecord, Com.Credenceid.Database.FaceRecord, Com.Credenceid.Database.IrisRecord, Com.Credenceid.Database.IBiometricDatabaseOnEnrollCallback)
  enroll(I[Lcom/credenceid/database/FingerprintRecord;Lcom/credenceid/database/FaceRecord;[Lcom/credenceid/database/IrisRecord;Lcom/credenceid/database/BiometricDatabase$OnEnrollCallback;)V = Enroll(int, Com.Credenceid.Database.FingerprintRecord[], Com.Credenceid.Database.FaceRecord, Com.Credenceid.Database.IrisRecord[], Com.Credenceid.Database.IBiometricDatabaseOnEnrollCallback)
  match(Lcom/credenceid/database/FingerprintRecord;Lcom/credenceid/database/FaceRecord;Lcom/credenceid/database/IrisRecord;Lcom/credenceid/database/BiometricDatabase$OnMatchCallback;)V = Match(Com.Credenceid.Database.FingerprintRecord, Com.Credenceid.Database.FaceRecord, Com.Credenceid.Database.IrisRecord, Com.Credenceid.Database.IBiometricDatabaseOnMatchCallback)
  match([Lcom/credenceid/database/FingerprintRecord;Lcom/credenceid/database/FaceRecord;[Lcom/credenceid/database/IrisRecord;Lcom/credenceid/database/BiometricDatabase$OnMatchCallback;)V = Match(Com.Credenceid.Database.FingerprintRecord[], Com.Credenceid.Database.FaceRecord, Com.Credenceid.Database.IrisRecord[], Com.Credenceid.Database.IBiometricDatabaseOnMatchCallback)
  read(ILcom/credenceid/database/BiometricDatabase$OnReadCallback;)V = Read(int, Com.Credenceid.Database.IBiometricDatabaseOnReadCallback)
  verify(ILcom/credenceid/database/FingerprintRecord;Lcom/credenceid/database/FaceRecord;Lcom/credenceid/database/IrisRecord;Lcom/credenceid/database/BiometricDatabase$OnVerifyCallback;)V = Verify(int, Com.Credenceid.Database.FingerprintRecord, Com.Credenceid.Database.FaceRecord, Com.Credenceid.Database.IrisRecord, Com.Credenceid.Database.IBiometricDatabaseOnVerifyCallback)
  verify(I[Lcom/credenceid/database/FingerprintRecord;Lcom/credenceid/database/FaceRecord;[Lcom/credenceid/database/IrisRecord;Lcom/credenceid/database/BiometricDatabase$OnVerifyCallback;)V = Verify(int, Com.Credenceid.Database.FingerprintRecord[], Com.Credenceid.Database.FaceRecord, Com.Credenceid.Database.IrisRecord[], Com.Credenceid.Database.IBiometricDatabaseOnVerifyCallback)
com/credenceid/database/FaceRecord = Com.Credenceid.Database.FaceRecord
  <init>()V = .ctor()
  <init>([B)V = .ctor(byte[])
  <init>([B[B)V = .ctor(byte[], byte[])
  <init>([B[B[B)V = .ctor(byte[], byte[], byte[])
  <init>(Landroid/graphics/Bitmap;)V = .ctor(Android.Graphics.Bitmap)
  <init>(Landroid/graphics/Bitmap;Landroid/graphics/Bitmap;)V = .ctor(Android.Graphics.Bitmap, Android.Graphics.Bitmap)
  <init>(Landroid/graphics/Bitmap;Landroid/graphics/Bitmap;Landroid/graphics/Bitmap;)V = .ctor(Android.Graphics.Bitmap, Android.Graphics.Bitmap, Android.Graphics.Bitmap)
  <init>(Landroid/os/Parcel;)V = .ctor(Android.OS.Parcel)
  <init>(Ljava/lang/String;)V = .ctor(string)
  <init>(Ljava/lang/String;Ljava/lang/String;)V = .ctor(string, string)
  <init>(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V = .ctor(string, string, string)
  CREATOR = Creator
  describeContents()I = DescribeContents()
  getTemplate()[B = GetTemplate()
  setTemplate([B)V = SetTemplate(byte[])
  writeToParcel(Landroid/os/Parcel;I)V = WriteToParcel(Android.OS.Parcel, Android.OS.ParcelableWriteFlags)
com/credenceid/database/FingerprintRecord = Com.Credenceid.Database.FingerprintRecord
  <init>(Lcom/credenceid/database/FingerprintRecord$Position;)V = .ctor(Com.Credenceid.Database.FingerprintRecord.Position)
  <init>(Lcom/credenceid/database/FingerprintRecord$Position;[B)V = .ctor(Com.Credenceid.Database.FingerprintRecord.Position, byte[])
  <init>(Lcom/credenceid/database/FingerprintRecord$Position;[B[B)V = .ctor(Com.Credenceid.Database.FingerprintRecord.Position, byte[], byte[])
  <init>(Lcom/credenceid/database/FingerprintRecord$Position;[B[B[B)V = .ctor(Com.Credenceid.Database.FingerprintRecord.Position, byte[], byte[], byte[])
  <init>(Lcom/credenceid/database/FingerprintRecord$Position;[BI)V = .ctor(Com.Credenceid.Database.FingerprintRecord.Position, byte[], int)
  <init>(Lcom/credenceid/database/FingerprintRecord$Position;[BI[BI)V = .ctor(Com.Credenceid.Database.FingerprintRecord.Position, byte[], int, byte[], int)
  <init>(Lcom/credenceid/database/FingerprintRecord$Position;[BI[BI[BI)V = .ctor(Com.Credenceid.Database.FingerprintRecord.Position, byte[], int, byte[], int, byte[], int)
  <init>(Lcom/credenceid/database/FingerprintRecord$Position;Landroid/graphics/Bitmap;)V = .ctor(Com.Credenceid.Database.FingerprintRecord.Position, Android.Graphics.Bitmap)
  <init>(Lcom/credenceid/database/FingerprintRecord$Position;Landroid/graphics/Bitmap;I)V = .ctor(Com.Credenceid.Database.FingerprintRecord.Position, Android.Graphics.Bitmap, int)
  <init>(Lcom/credenceid/database/FingerprintRecord$Position;Landroid/graphics/Bitmap;ILandroid/graphics/Bitmap;I)V = .ctor(Com.Credenceid.Database.FingerprintRecord.Position, Android.Graphics.Bitmap, int, Android.Graphics.Bitmap, int)
  <init>(Lcom/credenceid/database/FingerprintRecord$Position;Landroid/graphics/Bitmap;ILandroid/graphics/Bitmap;ILandroid/graphics/Bitmap;I)V = .ctor(Com.Credenceid.Database.FingerprintRecord.Position, Android.Graphics.Bitmap, int, Android.Graphics.Bitmap, int, Android.Graphics.Bitmap, int)
  <init>(Lcom/credenceid/database/FingerprintRecord$Position;Landroid/graphics/Bitmap;Landroid/graphics/Bitmap;)V = .ctor(Com.Credenceid.Database.FingerprintRecord.Position, Android.Graphics.Bitmap, Android.Graphics.Bitmap)
  <init>(Lcom/credenceid/database/FingerprintRecord$Position;Landroid/graphics/Bitmap;Landroid/graphics/Bitmap;Landroid/graphics/Bitmap;)V = .ctor(Com.Credenceid.Database.FingerprintRecord.Position, Android.Graphics.Bitmap, Android.Graphics.Bitmap, Android.Graphics.Bitmap)
  <init>(Lcom/credenceid/database/FingerprintRecord$Position;Ljava/lang/String;)V = .ctor(Com.Credenceid.Database.FingerprintRecord.Position, string)
  <init>(Lcom/credenceid/database/FingerprintRecord$Position;Ljava/lang/String;I)V = .ctor(Com.Credenceid.Database.FingerprintRecord.Position, string, int)
  <init>(Lcom/credenceid/database/FingerprintRecord$Position;Ljava/lang/String;ILjava/lang/String;I)V = .ctor(Com.Credenceid.Database.FingerprintRecord.Position, string, int, string, int)
  <init>(Lcom/credenceid/database/FingerprintRecord$Position;Ljava/lang/String;ILjava/lang/String;ILjava/lang/String;I)V = .ctor(Com.Credenceid.Database.FingerprintRecord.Position, string, int, string, int, string, int)
  <init>(Lcom/credenceid/database/FingerprintRecord$Position;Ljava/lang/String;Ljava/lang/String;)V = .ctor(Com.Credenceid.Database.FingerprintRecord.Position, string, string)
  <init>(Lcom/credenceid/database/FingerprintRecord$Position;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V = .ctor(Com.Credenceid.Database.FingerprintRecord.Position, string, string, string)
  getImageDPIs()Ljava/util/List; = ImageDPIs
  getImageDPI(Lcom/credenceid/database/ImageIndex;)I = GetImageDPI(Com.Credenceid.Database.ImageIndex)
  getPosition()Lcom/credenceid/database/FingerprintRecord$Position; = GetPosition()
  getTemplate()[B = GetTemplate()
  setDPI(Lcom/credenceid/database/ImageIndex;I)V = SetDPI(Com.Credenceid.Database.ImageIndex, int)
  setImage(Lcom/credenceid/database/ImageIndex;Landroid/graphics/Bitmap;I)Z = SetImage(Com.Credenceid.Database.ImageIndex, Android.Graphics.Bitmap, int)
  setImage(Lcom/credenceid/database/ImageIndex;[BI)Z = SetImage(Com.Credenceid.Database.ImageIndex, byte[], int)
  setImage(Lcom/credenceid/database/ImageIndex;Ljava/lang/String;I)Z = SetImage(Com.Credenceid.Database.ImageIndex, string, int)
  setPosition(Lcom/credenceid/database/FingerprintRecord$Position;)V = SetPosition(Com.Credenceid.Database.FingerprintRecord.Position)
  setTemplate([B)V = SetTemplate(byte[])
com/credenceid/database/ImageIndex = Com.Credenceid.Database.ImageIndex
  ONE = One
  THREE = Three
  TOTAL = Total
  TWO = Two
  getValue()I = Value
  valueOf(I)Lcom/credenceid/database/ImageIndex; = ValueOf(int)
  valueOf(Ljava/lang/String;)Lcom/credenceid/database/ImageIndex; = ValueOf(string)
  values()[Lcom/credenceid/database/ImageIndex; = Values()
com/credenceid/database/IrisRecord = Com.Credenceid.Database.IrisRecord
  <init>(Lcom/credenceid/database/IrisRecord$Position;)V = .ctor(Com.Credenceid.Database.IrisRecord.Position)
  <init>(Lcom/credenceid/database/IrisRecord$Position;[B)V = .ctor(Com.Credenceid.Database.IrisRecord.Position, byte[])
  <init>(Lcom/credenceid/database/IrisRecord$Position;[B[B)V = .ctor(Com.Credenceid.Database.IrisRecord.Position, byte[], byte[])
  <init>(Lcom/credenceid/database/IrisRecord$Position;[B[B[B)V = .ctor(Com.Credenceid.Database.IrisRecord.Position, byte[], byte[], byte[])
  <init>(Lcom/credenceid/database/IrisRecord$Position;Landroid/graphics/Bitmap;)V = .ctor(Com.Credenceid.Database.IrisRecord.Position, Android.Graphics.Bitmap)
  <init>(Lcom/credenceid/database/IrisRecord$Position;Landroid/graphics/Bitmap;Landroid/graphics/Bitmap;)V = .ctor(Com.Credenceid.Database.IrisRecord.Position, Android.Graphics.Bitmap, Android.Graphics.Bitmap)
  <init>(Lcom/credenceid/database/IrisRecord$Position;Landroid/graphics/Bitmap;Landroid/graphics/Bitmap;Landroid/graphics/Bitmap;)V = .ctor(Com.Credenceid.Database.IrisRecord.Position, Android.Graphics.Bitmap, Android.Graphics.Bitmap, Android.Graphics.Bitmap)
  <init>(Lcom/credenceid/database/IrisRecord$Position;Ljava/lang/String;)V = .ctor(Com.Credenceid.Database.IrisRecord.Position, string)
  <init>(Lcom/credenceid/database/IrisRecord$Position;Ljava/lang/String;Ljava/lang/String;)V = .ctor(Com.Credenceid.Database.IrisRecord.Position, string, string)
  <init>(Lcom/credenceid/database/IrisRecord$Position;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V = .ctor(Com.Credenceid.Database.IrisRecord.Position, string, string, string)
  getPosition()Lcom/credenceid/database/IrisRecord$Position; = GetPosition()
  setPosition(Lcom/credenceid/database/IrisRecord$Position;)V = SetPosition(Com.Credenceid.Database.IrisRecord.Position)
com/credenceid/database/MatchItem = Com.Credenceid.Database.MatchItem
  <init>()V = .ctor()
  <init>(IIII)V = .ctor(int, int, int, int)
  getFaceScore()I = FaceScore
  getFingerprintScore()I = FingerprintScore
  getID()I = ID
  setID(I)V = ID
  getIrisScore()I = IrisScore
  parse(Ljava/lang/String;)Lcom/credenceid/database/MatchItem; = Parse(string)
  parseArray(Ljava/lang/String;)Ljava/util/ArrayList; = ParseArray(string)
com/credenceid/face/AnalyzeFaceSyncResponse = Com.Credenceid.Face.AnalyzeFaceSyncResponse
  <init>(Lcom/credenceid/biometrics/Biometrics$ResultCode;)V = .ctor(Com.Credenceid.Biometrics.BiometricsResultCode)
  <init>(Lcom/credenceid/biometrics/Biometrics$ResultCode;Landroid/graphics/RectF;Ljava/util/ArrayList;Ljava/util/ArrayList;[F[Lcom/credenceid/face/FaceEngine$HeadPoseDirection;Lcom/credenceid/face/FaceEngine$Gender;ILcom/credenceid/face/FaceEngine$Emotion;ZI)V = .ctor(Com.Credenceid.Biometrics.BiometricsResultCode, Android.Graphics.RectF, System.Collections.Generic.IList<Android.Graphics.PointF>, System.Collections.Generic.IList<Android.Graphics.PointF>, float[], Com.Credenceid.Face.FaceEngineHeadPoseDirection[], Com.Credenceid.Face.FaceEngineGender, int, Com.Credenceid.Face.FaceEngineEmotion, bool, int)
  age = Age
  dominantEmotion = DominantEmotion
  faceRect = FaceRect
  gender = Gender
  hasGlasses = HasGlasses
  headPoseDirections = HeadPoseDirections
  headPoseEstimations = HeadPoseEstimations
  imageQuality = ImageQuality
  landmark5 = Landmark5
  landmark68 = Landmark68
  resultCode = ResultCode
com/credenceid/face/CompareFaceSyncResponse = Com.Credenceid.Face.CompareFaceSyncResponse
  <init>(Lcom/credenceid/biometrics/Biometrics$ResultCode;I)V = .ctor(Com.Credenceid.Biometrics.BiometricsResultCode, int)
  resultCode = ResultCode
  score = Score
com/credenceid/face/CreateFaceTemplateSyncResponse = Com.Credenceid.Face.CreateFaceTemplateSyncResponse
  <init>(Lcom/credenceid/biometrics/Biometrics$ResultCode;)V = .ctor(Com.Credenceid.Biometrics.BiometricsResultCode)
  <init>(Lcom/credenceid/biometrics/Biometrics$ResultCode;[B)V = .ctor(Com.Credenceid.Biometrics.BiometricsResultCode, byte[])
  resultCode = ResultCode
  template = Template
com/credenceid/face/DetectFaceSyncResponse = Com.Credenceid.Face.DetectFaceSyncResponse
  <init>(Lcom/credenceid/biometrics/Biometrics$ResultCode;Landroid/graphics/RectF;)V = .ctor(Com.Credenceid.Biometrics.BiometricsResultCode, Android.Graphics.RectF)
  faceRect = FaceRect
  resultCode = ResultCode
com/credenceid/face/FaceEngine = Com.Credenceid.Face.IFaceEngine
  analyzeFace(Landroid/graphics/Bitmap;Lcom/credenceid/face/FaceEngine$OnAnalyzeFaceImageListener;)V = AnalyzeFace(Android.Graphics.Bitmap, Com.Credenceid.Face.IFaceEngineOnAnalyzeFaceImageListener)
  analyzeFace([BIILcom/credenceid/face/FaceEngine$OnAnalyzeFaceImageListener;)V = AnalyzeFace(byte[], int, int, Com.Credenceid.Face.IFaceEngineOnAnalyzeFaceImageListener)
  analyzeFaceSync(Landroid/graphics/Bitmap;I)Lcom/credenceid/face/AnalyzeFaceSyncResponse; = AnalyzeFaceSync(Android.Graphics.Bitmap, int)
  analyzeFaceSync([BIII)Lcom/credenceid/face/AnalyzeFaceSyncResponse; = AnalyzeFaceSync(byte[], int, int, int)
  compareFace([B[BLcom/credenceid/face/FaceEngine$OnMatchFaceTemplatesListener;)V = CompareFace(byte[], byte[], Com.Credenceid.Face.IFaceEngineOnMatchFaceTemplatesListener)
  compareFaceSync([B[BI)Lcom/credenceid/face/CompareFaceSyncResponse; = CompareFaceSync(byte[], byte[], int)
  createFaceTemplate(Landroid/graphics/Bitmap;Lcom/credenceid/face/FaceEngine$OnCreateFaceTemplateListener;)V = CreateFaceTemplate(Android.Graphics.Bitmap, Com.Credenceid.Face.IFaceEngineOnCreateFaceTemplateListener)
  createFaceTemplate([BIILcom/credenceid/face/FaceEngine$OnCreateFaceTemplateListener;)V = CreateFaceTemplate(byte[], int, int, Com.Credenceid.Face.IFaceEngineOnCreateFaceTemplateListener)
  createFaceTemplateSync(Landroid/graphics/Bitmap;I)Lcom/credenceid/face/CreateFaceTemplateSyncResponse; = CreateFaceTemplateSync(Android.Graphics.Bitmap, int)
  createFaceTemplateSync([BIII)Lcom/credenceid/face/CreateFaceTemplateSyncResponse; = CreateFaceTemplateSync(byte[], int, int, int)
  detectFace(Landroid/graphics/Bitmap;Lcom/credenceid/face/FaceEngine$OnDetectFaceListener;)V = DetectFace(Android.Graphics.Bitmap, Com.Credenceid.Face.IFaceEngineOnDetectFaceListener)
  detectFace([BIILcom/credenceid/face/FaceEngine$OnDetectFaceListener;)V = DetectFace(byte[], int, int, Com.Credenceid.Face.IFaceEngineOnDetectFaceListener)
  detectFaceSync(Landroid/graphics/Bitmap;I)Lcom/credenceid/face/DetectFaceSyncResponse; = DetectFaceSync(Android.Graphics.Bitmap, int)
  detectFaceSync([BIII)Lcom/credenceid/face/DetectFaceSyncResponse; = DetectFaceSync(byte[], int, int, int)
com/credenceid/face/FaceView = Com.Credenceid.Face.FaceView
  <init>(Landroid/content/Context;Landroid/util/AttributeSet;)V = .ctor(Android.Content.Context, Android.Util.IAttributeSet)
  clearFaceLandmarks()V = ClearFaceLandmarks()
  configureDrawPaint(Landroid/graphics/Paint;)V = ConfigureDrawPaint(Android.Graphics.Paint)
  configureDrawPaint(ILandroid/graphics/Paint$Style;I)V = ConfigureDrawPaint(int, Android.Graphics.Paint.Style, int)
  drawFaceData(Z)V = DrawFaceData(bool)
  onDraw(Landroid/graphics/Canvas;)V = OnDraw(Android.Graphics.Canvas)
  setBitmap(Landroid/graphics/Bitmap;)V = SetBitmap(Android.Graphics.Bitmap)
  setFaceLandmarks([F[F)Z = SetFaceLandmarks(float[], float[])
  setFaceLandmarks(Ljava/util/ArrayList;)Z = SetFaceLandmarks(System.Collections.Generic.IList<Android.Graphics.PointF>)
  setFaceRect(IIII)V = SetFaceRect(int, int, int, int)
com/credenceid/icao/FingerInfo = Com.Credenceid.Icao.FingerInfo
  <init>()V = .ctor()
  getBitmap()Landroid/graphics/Bitmap; = Bitmap
  setBitmap(Landroid/graphics/Bitmap;)V = Bitmap
  getImageHeight()I = ImageHeight
  getImageWidth()I = ImageWidth
  getPosition()I = Position
  setPosition(I)V = Position
  getBytes()[B = GetBytes()
  setBytes([B)V = SetBytes(byte[])
  setHeight(I)V = SetHeight(int)
  setWidth(I)V = SetWidth(int)
com/credenceid/icao/GhanaIdCardFpTemplateInfo = Com.Credenceid.Icao.GhanaIdCardFpTemplateInfo
  <init>([BB)V = .ctor(byte[], sbyte)
  getPosition()B = Position
  getPositionName()Ljava/lang/String; = PositionName
  getMinutiae()[B = GetMinutiae()
com/credenceid/icao/GIdData = Com.Credenceid.Icao.GIdData
  <init>()V = .ctor()
  DG1 = Dg1
  DG10 = Dg10
  DG11 = Dg11
  DG2 = Dg2
  DG3 = Dg3
  DG4 = Dg4
  DG5 = Dg5
  DG6 = Dg6
  DG7 = Dg7
  DG8 = Dg8
  DG9 = Dg9
com/credenceid/icao/ICAODocumentData = Com.Credenceid.Icao.ICAODocumentData
  <init>()V = .ctor()
  DG1 = Dg1
  DG11 = Dg11
  DG12 = Dg12
  DG2 = Dg2
  DG3 = Dg3
  DG7 = Dg7
com/credenceid/icao/ICAOReadIntermediateCode = Com.Credenceid.Icao.ICAOReadIntermediateCode
  BAC = Bac
  DG1 = Dg1
  DG10 = Dg10
  DG11 = Dg11
  DG12 = Dg12
  DG2 = Dg2
  DG3 = Dg3
  DG4 = Dg4
  DG5 = Dg5
  DG6 = Dg6
  DG7 = Dg7
  DG8 = Dg8
  DG9 = Dg9
  EAC = Eac
  NONE = None
  valueOf(Ljava/lang/String;)Lcom/credenceid/icao/ICAOReadIntermediateCode; = ValueOf(string)
  values()[Lcom/credenceid/icao/ICAOReadIntermediateCode; = Values()
com/credenceid/icao/ICAOUtils = Com.Credenceid.Icao.ICAOUtils
  <init>()V = .ctor()
  convertIntermediateCodeConstant(I)Lcom/credenceid/icao/ICAOReadIntermediateCode; = ConvertIntermediateCodeConstant(int)
com/util/BitmapUtils = Com.Util.BitmapUtils
  <init>()V = .ctor()
  cropToSquare(Landroid/graphics/Bitmap;)Landroid/graphics/Bitmap; = CropToSquare(Android.Graphics.Bitmap)
  rotate(Landroid/graphics/Bitmap;I)Landroid/graphics/Bitmap; = Rotate(Android.Graphics.Bitmap, int)
  toBitmap([B)Landroid/graphics/Bitmap; = ToBitmap(byte[])
  toBytes(Landroid/graphics/Bitmap;)[B = ToBytes(Android.Graphics.Bitmap)
  toGrayScale(Landroid/graphics/Bitmap;)Landroid/graphics/Bitmap; = ToGrayScale(Android.Graphics.Bitmap)
com/util/FileUtils = Com.Util.FileUtils
  <init>()V = .ctor()
  delete(Ljava/lang/String;)Z = Delete(string)
  readBitmap(Ljava/lang/String;)Landroid/graphics/Bitmap; = ReadBitmap(string)
com/util/HexUtils = Com.Util.HexUtils
  <init>()V = .ctor()
  toString(B)Ljava/lang/String; = ToString(sbyte)
  toString([B)Ljava/lang/String; = ToString(byte[])
  toString([BII)Ljava/lang/String; = ToString(byte[], int, int)
  toString([[B)Ljava/lang/String; = ToString(byte[][])
com/util/Logger = Com.Util.Logger
  <init>()V = .ctor()
  d(Ljava/lang/String;Ljava/lang/String;)V = D(string, string)
  e(Ljava/lang/String;Ljava/lang/String;)V = E(string, string)
  i(Ljava/lang/String;Ljava/lang/String;)V = I(string, string)
  setEnable(Z)V = SetEnable(bool)
  w(Ljava/lang/String;Ljava/lang/String;)V = W(string, string)
